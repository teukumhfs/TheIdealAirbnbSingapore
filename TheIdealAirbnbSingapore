{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/teukumhfs/TheIdealAirbnbSingapore/blob/main/TheIdealAirbnbSingapore\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "r7b5_5n2Ls7v"
      },
      "source": [
        "# Finding the Ideal Airbnb in Singapore\n",
        "\n",
        "My friend and i planning a holiday in Singapore and demands careful selection of accommodations that meet our budget while garnering positive guest reviews. In this analysis, i'll discover the perfect Airbnb stay by striking a balance between stellar reviews and budget constraints.\n",
        "\n",
        "My analysis will presents a curated list of Airbnb options in Singapore, ensuring an enjoyable and comfortable staying within suitable budget, while meeting the expectations for a delightful vacation. So, let's get started."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "j-irERzFLwb8"
      },
      "outputs": [],
      "source": [
        "# @title Import requirements\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import requests\n",
        "import re\n",
        "import csv\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "import folium\n",
        "from folium.plugins import MarkerCluster\n",
        "from geopy.geocoders import Nominatim"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wdzLyeXrLzcP",
        "outputId": "a43f9678-f87a-4638-9daf-0ac9f635a371"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ],
      "source": [
        "# @title Mount Google Drive\n",
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "TVoAS4jCL_K2"
      },
      "outputs": [],
      "source": [
        "# @title Setup DataFrame path\n",
        "df_listing = pd.read_csv('/content/drive/MyDrive/dataset/airbnb/listings_airbnb_sg.csv')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 738
        },
        "id": "ZjvFXZLZMB5e",
        "outputId": "36037384-810f-4c3d-bcb6-2bbdc4a7ae05"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id                                               name  host_id  \\\n",
              "0   71609  Villa in Singapore · ★4.44 · 2 bedrooms · 3 be...   367042   \n",
              "1   71896  Home in Singapore · ★4.16 · 1 bedroom · 1 bed ...   367042   \n",
              "2   71903  Home in Singapore · ★4.41 · 1 bedroom · 2 beds...   367042   \n",
              "3  275343  Rental unit in Singapore · ★4.40 · 1 bedroom ·...  1439258   \n",
              "4  275344  Rental unit in Singapore · ★4.54 · 1 bedroom ·...  1439258   \n",
              "\n",
              "  host_name neighbourhood_group neighbourhood  latitude  longitude  \\\n",
              "0   Belinda         East Region      Tampines   1.34537  103.95887   \n",
              "1   Belinda         East Region      Tampines   1.34754  103.95958   \n",
              "2   Belinda         East Region      Tampines   1.34531  103.96100   \n",
              "3       Kay      Central Region   Bukit Merah   1.29015  103.80814   \n",
              "4       Kay      Central Region   Bukit Merah   1.28836  103.81144   \n",
              "\n",
              "      room_type  price  minimum_nights  number_of_reviews last_review  \\\n",
              "0  Private room    139              92                 20  2020-01-17   \n",
              "1  Private room     70              92                 24  2019-10-13   \n",
              "2  Private room     81              92                 47  2020-01-09   \n",
              "3  Private room     55              90                 22  2022-08-13   \n",
              "4  Private room     69              60                 15  2023-03-23   \n",
              "\n",
              "   reviews_per_month  calculated_host_listings_count  availability_365  \\\n",
              "0               0.14                               5               363   \n",
              "1               0.17                               5               365   \n",
              "2               0.32                               5               363   \n",
              "3               0.18                              51               301   \n",
              "4               0.11                              51                57   \n",
              "\n",
              "   number_of_reviews_ltm license  \n",
              "0                      0     NaN  \n",
              "1                      0     NaN  \n",
              "2                      0     NaN  \n",
              "3                      1     NaN  \n",
              "4                      2     NaN  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-89180bf2-5fff-495b-ba57-f2595d69b8b8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>host_id</th>\n",
              "      <th>host_name</th>\n",
              "      <th>neighbourhood_group</th>\n",
              "      <th>neighbourhood</th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>room_type</th>\n",
              "      <th>price</th>\n",
              "      <th>minimum_nights</th>\n",
              "      <th>number_of_reviews</th>\n",
              "      <th>last_review</th>\n",
              "      <th>reviews_per_month</th>\n",
              "      <th>calculated_host_listings_count</th>\n",
              "      <th>availability_365</th>\n",
              "      <th>number_of_reviews_ltm</th>\n",
              "      <th>license</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>71609</td>\n",
              "      <td>Villa in Singapore · ★4.44 · 2 bedrooms · 3 be...</td>\n",
              "      <td>367042</td>\n",
              "      <td>Belinda</td>\n",
              "      <td>East Region</td>\n",
              "      <td>Tampines</td>\n",
              "      <td>1.34537</td>\n",
              "      <td>103.95887</td>\n",
              "      <td>Private room</td>\n",
              "      <td>139</td>\n",
              "      <td>92</td>\n",
              "      <td>20</td>\n",
              "      <td>2020-01-17</td>\n",
              "      <td>0.14</td>\n",
              "      <td>5</td>\n",
              "      <td>363</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>71896</td>\n",
              "      <td>Home in Singapore · ★4.16 · 1 bedroom · 1 bed ...</td>\n",
              "      <td>367042</td>\n",
              "      <td>Belinda</td>\n",
              "      <td>East Region</td>\n",
              "      <td>Tampines</td>\n",
              "      <td>1.34754</td>\n",
              "      <td>103.95958</td>\n",
              "      <td>Private room</td>\n",
              "      <td>70</td>\n",
              "      <td>92</td>\n",
              "      <td>24</td>\n",
              "      <td>2019-10-13</td>\n",
              "      <td>0.17</td>\n",
              "      <td>5</td>\n",
              "      <td>365</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>71903</td>\n",
              "      <td>Home in Singapore · ★4.41 · 1 bedroom · 2 beds...</td>\n",
              "      <td>367042</td>\n",
              "      <td>Belinda</td>\n",
              "      <td>East Region</td>\n",
              "      <td>Tampines</td>\n",
              "      <td>1.34531</td>\n",
              "      <td>103.96100</td>\n",
              "      <td>Private room</td>\n",
              "      <td>81</td>\n",
              "      <td>92</td>\n",
              "      <td>47</td>\n",
              "      <td>2020-01-09</td>\n",
              "      <td>0.32</td>\n",
              "      <td>5</td>\n",
              "      <td>363</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>275343</td>\n",
              "      <td>Rental unit in Singapore · ★4.40 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Central Region</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>1.29015</td>\n",
              "      <td>103.80814</td>\n",
              "      <td>Private room</td>\n",
              "      <td>55</td>\n",
              "      <td>90</td>\n",
              "      <td>22</td>\n",
              "      <td>2022-08-13</td>\n",
              "      <td>0.18</td>\n",
              "      <td>51</td>\n",
              "      <td>301</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>275344</td>\n",
              "      <td>Rental unit in Singapore · ★4.54 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Central Region</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>1.28836</td>\n",
              "      <td>103.81144</td>\n",
              "      <td>Private room</td>\n",
              "      <td>69</td>\n",
              "      <td>60</td>\n",
              "      <td>15</td>\n",
              "      <td>2023-03-23</td>\n",
              "      <td>0.11</td>\n",
              "      <td>51</td>\n",
              "      <td>57</td>\n",
              "      <td>2</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89180bf2-5fff-495b-ba57-f2595d69b8b8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-9c02ec85-dc47-4a6c-81d3-5e8507d413a3\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9c02ec85-dc47-4a6c-81d3-5e8507d413a3')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-9c02ec85-dc47-4a6c-81d3-5e8507d413a3 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-89180bf2-5fff-495b-ba57-f2595d69b8b8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-89180bf2-5fff-495b-ba57-f2595d69b8b8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ],
      "source": [
        "# @title Show the data\n",
        "df_listing.head()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Show the data information\n",
        "df_listing.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Iap24OwZ107H",
        "outputId": "8ef6c0bb-6429-4513-cfc9-f15a0b9c9020"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 3443 entries, 0 to 3442\n",
            "Data columns (total 18 columns):\n",
            " #   Column                          Non-Null Count  Dtype  \n",
            "---  ------                          --------------  -----  \n",
            " 0   id                              3443 non-null   int64  \n",
            " 1   name                            3443 non-null   object \n",
            " 2   host_id                         3443 non-null   int64  \n",
            " 3   host_name                       3443 non-null   object \n",
            " 4   neighbourhood_group             3443 non-null   object \n",
            " 5   neighbourhood                   3443 non-null   object \n",
            " 6   latitude                        3443 non-null   float64\n",
            " 7   longitude                       3443 non-null   float64\n",
            " 8   room_type                       3443 non-null   object \n",
            " 9   price                           3443 non-null   int64  \n",
            " 10  minimum_nights                  3443 non-null   int64  \n",
            " 11  number_of_reviews               3443 non-null   int64  \n",
            " 12  last_review                     1909 non-null   object \n",
            " 13  reviews_per_month               1909 non-null   float64\n",
            " 14  calculated_host_listings_count  3443 non-null   int64  \n",
            " 15  availability_365                3443 non-null   int64  \n",
            " 16  number_of_reviews_ltm           3443 non-null   int64  \n",
            " 17  license                         1213 non-null   object \n",
            "dtypes: float64(3), int64(8), object(7)\n",
            "memory usage: 484.3+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Data Cleaning"
      ],
      "metadata": {
        "id": "CEua-YGQv4tF"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Ui3Emg1wMFhK"
      },
      "outputs": [],
      "source": [
        "# @title Transforming the data\n",
        "\n",
        "# Create rating column\n",
        "\n",
        "# Create a copy of the DataFrame\n",
        "modified_df_listing = df_listing.copy()\n",
        "\n",
        "def extract_star_rating(name):\n",
        "    # Use regular expression/re to find the star rating pattern (★X.XX)\n",
        "    rating_match = re.search(r'★(\\d+\\.\\d+)', name)\n",
        "    if rating_match:\n",
        "        return float(rating_match.group(1))\n",
        "    else:\n",
        "        return None\n",
        "\n",
        "# Apply the function to create the new 'rating' column in the new DataFrame\n",
        "modified_df_listing['rating'] = modified_df_listing['name'].apply(extract_star_rating)\n",
        "\n",
        "# Merge the 'rating' column from new_df_listing to df_listing based on 'id'\n",
        "new_df_listing = df_listing.merge(modified_df_listing[['id', 'rating']], on='id', how='left').copy()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 738
        },
        "id": "TVB_-oZ9MU-9",
        "outputId": "9bf141c1-6f96-439c-813e-90aecc2eb5c5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id                                               name  host_id  \\\n",
              "0   71609  Villa in Singapore · ★4.44 · 2 bedrooms · 3 be...   367042   \n",
              "1   71896  Home in Singapore · ★4.16 · 1 bedroom · 1 bed ...   367042   \n",
              "2   71903  Home in Singapore · ★4.41 · 1 bedroom · 2 beds...   367042   \n",
              "3  275343  Rental unit in Singapore · ★4.40 · 1 bedroom ·...  1439258   \n",
              "4  275344  Rental unit in Singapore · ★4.54 · 1 bedroom ·...  1439258   \n",
              "\n",
              "  host_name neighbourhood_group neighbourhood  latitude  longitude  \\\n",
              "0   Belinda         East Region      Tampines   1.34537  103.95887   \n",
              "1   Belinda         East Region      Tampines   1.34754  103.95958   \n",
              "2   Belinda         East Region      Tampines   1.34531  103.96100   \n",
              "3       Kay      Central Region   Bukit Merah   1.29015  103.80814   \n",
              "4       Kay      Central Region   Bukit Merah   1.28836  103.81144   \n",
              "\n",
              "      room_type  price  minimum_nights  number_of_reviews last_review  \\\n",
              "0  Private room    139              92                 20  2020-01-17   \n",
              "1  Private room     70              92                 24  2019-10-13   \n",
              "2  Private room     81              92                 47  2020-01-09   \n",
              "3  Private room     55              90                 22  2022-08-13   \n",
              "4  Private room     69              60                 15  2023-03-23   \n",
              "\n",
              "   reviews_per_month  calculated_host_listings_count  availability_365  \\\n",
              "0               0.14                               5               363   \n",
              "1               0.17                               5               365   \n",
              "2               0.32                               5               363   \n",
              "3               0.18                              51               301   \n",
              "4               0.11                              51                57   \n",
              "\n",
              "   number_of_reviews_ltm license  rating  \n",
              "0                      0     NaN    4.44  \n",
              "1                      0     NaN    4.16  \n",
              "2                      0     NaN    4.41  \n",
              "3                      1     NaN    4.40  \n",
              "4                      2     NaN    4.54  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-4cfc51c2-7a7e-4349-87ed-42526964d346\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>host_id</th>\n",
              "      <th>host_name</th>\n",
              "      <th>neighbourhood_group</th>\n",
              "      <th>neighbourhood</th>\n",
              "      <th>latitude</th>\n",
              "      <th>longitude</th>\n",
              "      <th>room_type</th>\n",
              "      <th>price</th>\n",
              "      <th>minimum_nights</th>\n",
              "      <th>number_of_reviews</th>\n",
              "      <th>last_review</th>\n",
              "      <th>reviews_per_month</th>\n",
              "      <th>calculated_host_listings_count</th>\n",
              "      <th>availability_365</th>\n",
              "      <th>number_of_reviews_ltm</th>\n",
              "      <th>license</th>\n",
              "      <th>rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>71609</td>\n",
              "      <td>Villa in Singapore · ★4.44 · 2 bedrooms · 3 be...</td>\n",
              "      <td>367042</td>\n",
              "      <td>Belinda</td>\n",
              "      <td>East Region</td>\n",
              "      <td>Tampines</td>\n",
              "      <td>1.34537</td>\n",
              "      <td>103.95887</td>\n",
              "      <td>Private room</td>\n",
              "      <td>139</td>\n",
              "      <td>92</td>\n",
              "      <td>20</td>\n",
              "      <td>2020-01-17</td>\n",
              "      <td>0.14</td>\n",
              "      <td>5</td>\n",
              "      <td>363</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>71896</td>\n",
              "      <td>Home in Singapore · ★4.16 · 1 bedroom · 1 bed ...</td>\n",
              "      <td>367042</td>\n",
              "      <td>Belinda</td>\n",
              "      <td>East Region</td>\n",
              "      <td>Tampines</td>\n",
              "      <td>1.34754</td>\n",
              "      <td>103.95958</td>\n",
              "      <td>Private room</td>\n",
              "      <td>70</td>\n",
              "      <td>92</td>\n",
              "      <td>24</td>\n",
              "      <td>2019-10-13</td>\n",
              "      <td>0.17</td>\n",
              "      <td>5</td>\n",
              "      <td>365</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>71903</td>\n",
              "      <td>Home in Singapore · ★4.41 · 1 bedroom · 2 beds...</td>\n",
              "      <td>367042</td>\n",
              "      <td>Belinda</td>\n",
              "      <td>East Region</td>\n",
              "      <td>Tampines</td>\n",
              "      <td>1.34531</td>\n",
              "      <td>103.96100</td>\n",
              "      <td>Private room</td>\n",
              "      <td>81</td>\n",
              "      <td>92</td>\n",
              "      <td>47</td>\n",
              "      <td>2020-01-09</td>\n",
              "      <td>0.32</td>\n",
              "      <td>5</td>\n",
              "      <td>363</td>\n",
              "      <td>0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>275343</td>\n",
              "      <td>Rental unit in Singapore · ★4.40 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Central Region</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>1.29015</td>\n",
              "      <td>103.80814</td>\n",
              "      <td>Private room</td>\n",
              "      <td>55</td>\n",
              "      <td>90</td>\n",
              "      <td>22</td>\n",
              "      <td>2022-08-13</td>\n",
              "      <td>0.18</td>\n",
              "      <td>51</td>\n",
              "      <td>301</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>275344</td>\n",
              "      <td>Rental unit in Singapore · ★4.54 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Central Region</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>1.28836</td>\n",
              "      <td>103.81144</td>\n",
              "      <td>Private room</td>\n",
              "      <td>69</td>\n",
              "      <td>60</td>\n",
              "      <td>15</td>\n",
              "      <td>2023-03-23</td>\n",
              "      <td>0.11</td>\n",
              "      <td>51</td>\n",
              "      <td>57</td>\n",
              "      <td>2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.54</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4cfc51c2-7a7e-4349-87ed-42526964d346')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-5bb3678f-6f0b-4cb4-a2b8-9fd41956f62d\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5bb3678f-6f0b-4cb4-a2b8-9fd41956f62d')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-5bb3678f-6f0b-4cb4-a2b8-9fd41956f62d button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4cfc51c2-7a7e-4349-87ed-42526964d346 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4cfc51c2-7a7e-4349-87ed-42526964d346');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ],
      "source": [
        "# @title Show transformed DataFrame with rating column\n",
        "new_df_listing.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 738
        },
        "id": "r7sEqIqSMf6C",
        "outputId": "51dd4ebc-c0ae-4e14-b30b-2b7da0c6a291"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id                                               name  host_id  \\\n",
              "0   71609  Villa in Singapore · ★4.44 · 2 bedrooms · 3 be...   367042   \n",
              "1   71896  Home in Singapore · ★4.16 · 1 bedroom · 1 bed ...   367042   \n",
              "2   71903  Home in Singapore · ★4.41 · 1 bedroom · 2 beds...   367042   \n",
              "3  275343  Rental unit in Singapore · ★4.40 · 1 bedroom ·...  1439258   \n",
              "4  275344  Rental unit in Singapore · ★4.54 · 1 bedroom ·...  1439258   \n",
              "\n",
              "  host_name neighbourhood     room_type  price last_review  reviews_per_month  \\\n",
              "0   Belinda      Tampines  Private room    139  2020-01-17               0.14   \n",
              "1   Belinda      Tampines  Private room     70  2019-10-13               0.17   \n",
              "2   Belinda      Tampines  Private room     81  2020-01-09               0.32   \n",
              "3       Kay   Bukit Merah  Private room     55  2022-08-13               0.18   \n",
              "4       Kay   Bukit Merah  Private room     69  2023-03-23               0.11   \n",
              "\n",
              "   availability_365  rating  \n",
              "0               363    4.44  \n",
              "1               365    4.16  \n",
              "2               363    4.41  \n",
              "3               301    4.40  \n",
              "4                57    4.54  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-c60b2555-977e-4367-ba60-072a0a5e2bd8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>host_id</th>\n",
              "      <th>host_name</th>\n",
              "      <th>neighbourhood</th>\n",
              "      <th>room_type</th>\n",
              "      <th>price</th>\n",
              "      <th>last_review</th>\n",
              "      <th>reviews_per_month</th>\n",
              "      <th>availability_365</th>\n",
              "      <th>rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>71609</td>\n",
              "      <td>Villa in Singapore · ★4.44 · 2 bedrooms · 3 be...</td>\n",
              "      <td>367042</td>\n",
              "      <td>Belinda</td>\n",
              "      <td>Tampines</td>\n",
              "      <td>Private room</td>\n",
              "      <td>139</td>\n",
              "      <td>2020-01-17</td>\n",
              "      <td>0.14</td>\n",
              "      <td>363</td>\n",
              "      <td>4.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>71896</td>\n",
              "      <td>Home in Singapore · ★4.16 · 1 bedroom · 1 bed ...</td>\n",
              "      <td>367042</td>\n",
              "      <td>Belinda</td>\n",
              "      <td>Tampines</td>\n",
              "      <td>Private room</td>\n",
              "      <td>70</td>\n",
              "      <td>2019-10-13</td>\n",
              "      <td>0.17</td>\n",
              "      <td>365</td>\n",
              "      <td>4.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>71903</td>\n",
              "      <td>Home in Singapore · ★4.41 · 1 bedroom · 2 beds...</td>\n",
              "      <td>367042</td>\n",
              "      <td>Belinda</td>\n",
              "      <td>Tampines</td>\n",
              "      <td>Private room</td>\n",
              "      <td>81</td>\n",
              "      <td>2020-01-09</td>\n",
              "      <td>0.32</td>\n",
              "      <td>363</td>\n",
              "      <td>4.41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>275343</td>\n",
              "      <td>Rental unit in Singapore · ★4.40 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>Private room</td>\n",
              "      <td>55</td>\n",
              "      <td>2022-08-13</td>\n",
              "      <td>0.18</td>\n",
              "      <td>301</td>\n",
              "      <td>4.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>275344</td>\n",
              "      <td>Rental unit in Singapore · ★4.54 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>Private room</td>\n",
              "      <td>69</td>\n",
              "      <td>2023-03-23</td>\n",
              "      <td>0.11</td>\n",
              "      <td>57</td>\n",
              "      <td>4.54</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c60b2555-977e-4367-ba60-072a0a5e2bd8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-758d4a8b-1285-4397-9a59-7a1f9eacc13f\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-758d4a8b-1285-4397-9a59-7a1f9eacc13f')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-758d4a8b-1285-4397-9a59-7a1f9eacc13f button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c60b2555-977e-4367-ba60-072a0a5e2bd8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c60b2555-977e-4367-ba60-072a0a5e2bd8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ],
      "source": [
        "# @title Select column to keep\n",
        "\n",
        "# List of columns to keep\n",
        "columns_to_keep = ['id', 'name', 'host_id', 'host_name', 'neighbourhood', 'room_type',\n",
        "                   'price', 'last_review', 'reviews_per_month', 'availability_365', 'rating']\n",
        "\n",
        "# Show only the specified columns\n",
        "df_selected = new_df_listing[columns_to_keep]\n",
        "\n",
        "df_selected.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "16NVDMJwMmnX",
        "outputId": "e55b1ab3-db29-4951-e3c3-cf69d47632be"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of rows: 3443\n"
          ]
        }
      ],
      "source": [
        "# Count the DataFrame rows\n",
        "count_rows = df_selected.shape[0]\n",
        "\n",
        "print(\"Number of rows:\", count_rows)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2zo47HWvMqlD",
        "outputId": "b86f67f2-b21a-4cd1-ff13-9d5a06b78c3a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "id                      0\n",
            "name                    0\n",
            "host_id                 0\n",
            "host_name               0\n",
            "neighbourhood           0\n",
            "room_type               0\n",
            "price                   0\n",
            "last_review          1534\n",
            "reviews_per_month    1534\n",
            "availability_365        0\n",
            "rating               2272\n",
            "dtype: int64\n"
          ]
        }
      ],
      "source": [
        "# @title Check for missing values in the DataFrame\n",
        "print(df_selected.isnull().sum())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 738
        },
        "id": "jTK_vkb4Mu3Y",
        "outputId": "89e6535b-f2ef-4ccf-cd67-d8de3012ec77"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id                                               name  host_id  \\\n",
              "0   71609  Villa in Singapore · ★4.44 · 2 bedrooms · 3 be...   367042   \n",
              "1   71896  Home in Singapore · ★4.16 · 1 bedroom · 1 bed ...   367042   \n",
              "2   71903  Home in Singapore · ★4.41 · 1 bedroom · 2 beds...   367042   \n",
              "3  275343  Rental unit in Singapore · ★4.40 · 1 bedroom ·...  1439258   \n",
              "4  275344  Rental unit in Singapore · ★4.54 · 1 bedroom ·...  1439258   \n",
              "\n",
              "  host_name neighbourhood     room_type  price last_review  reviews_per_month  \\\n",
              "0   Belinda      Tampines  Private room    139  2020-01-17               0.14   \n",
              "1   Belinda      Tampines  Private room     70  2019-10-13               0.17   \n",
              "2   Belinda      Tampines  Private room     81  2020-01-09               0.32   \n",
              "3       Kay   Bukit Merah  Private room     55  2022-08-13               0.18   \n",
              "4       Kay   Bukit Merah  Private room     69  2023-03-23               0.11   \n",
              "\n",
              "   availability_365 rating  \n",
              "0               363   4.44  \n",
              "1               365   4.16  \n",
              "2               363   4.41  \n",
              "3               301    4.4  \n",
              "4                57   4.54  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-2dc6b2ce-854d-43d4-b8a9-4150a29deb5c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>host_id</th>\n",
              "      <th>host_name</th>\n",
              "      <th>neighbourhood</th>\n",
              "      <th>room_type</th>\n",
              "      <th>price</th>\n",
              "      <th>last_review</th>\n",
              "      <th>reviews_per_month</th>\n",
              "      <th>availability_365</th>\n",
              "      <th>rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>71609</td>\n",
              "      <td>Villa in Singapore · ★4.44 · 2 bedrooms · 3 be...</td>\n",
              "      <td>367042</td>\n",
              "      <td>Belinda</td>\n",
              "      <td>Tampines</td>\n",
              "      <td>Private room</td>\n",
              "      <td>139</td>\n",
              "      <td>2020-01-17</td>\n",
              "      <td>0.14</td>\n",
              "      <td>363</td>\n",
              "      <td>4.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>71896</td>\n",
              "      <td>Home in Singapore · ★4.16 · 1 bedroom · 1 bed ...</td>\n",
              "      <td>367042</td>\n",
              "      <td>Belinda</td>\n",
              "      <td>Tampines</td>\n",
              "      <td>Private room</td>\n",
              "      <td>70</td>\n",
              "      <td>2019-10-13</td>\n",
              "      <td>0.17</td>\n",
              "      <td>365</td>\n",
              "      <td>4.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>71903</td>\n",
              "      <td>Home in Singapore · ★4.41 · 1 bedroom · 2 beds...</td>\n",
              "      <td>367042</td>\n",
              "      <td>Belinda</td>\n",
              "      <td>Tampines</td>\n",
              "      <td>Private room</td>\n",
              "      <td>81</td>\n",
              "      <td>2020-01-09</td>\n",
              "      <td>0.32</td>\n",
              "      <td>363</td>\n",
              "      <td>4.41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>275343</td>\n",
              "      <td>Rental unit in Singapore · ★4.40 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>Private room</td>\n",
              "      <td>55</td>\n",
              "      <td>2022-08-13</td>\n",
              "      <td>0.18</td>\n",
              "      <td>301</td>\n",
              "      <td>4.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>275344</td>\n",
              "      <td>Rental unit in Singapore · ★4.54 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>Private room</td>\n",
              "      <td>69</td>\n",
              "      <td>2023-03-23</td>\n",
              "      <td>0.11</td>\n",
              "      <td>57</td>\n",
              "      <td>4.54</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2dc6b2ce-854d-43d4-b8a9-4150a29deb5c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-8a9f7842-9522-4ef5-bfff-346e553f1292\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8a9f7842-9522-4ef5-bfff-346e553f1292')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-8a9f7842-9522-4ef5-bfff-346e553f1292 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2dc6b2ce-854d-43d4-b8a9-4150a29deb5c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2dc6b2ce-854d-43d4-b8a9-4150a29deb5c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ],
      "source": [
        "# @title Handle missing values\n",
        "import warnings\n",
        "\n",
        "# Ignore SettingWithCopyWarnings\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "\n",
        "# missing value handling\n",
        "df_selected['last_review'].fillna(0, inplace=True)\n",
        "df_selected['reviews_per_month'].fillna(0, inplace=True)\n",
        "df_selected['rating'].fillna('Unrated', inplace=True)\n",
        "\n",
        "# Re-enable warnings\n",
        "warnings.filterwarnings(\"default\")\n",
        "\n",
        "df_selected.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qk8XPMlKMy56",
        "outputId": "1a4d53f0-18f5-4388-a0e4-062ea7c48183"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "id                   0\n",
            "name                 0\n",
            "host_id              0\n",
            "host_name            0\n",
            "neighbourhood        0\n",
            "room_type            0\n",
            "price                0\n",
            "last_review          0\n",
            "reviews_per_month    0\n",
            "availability_365     0\n",
            "rating               0\n",
            "dtype: int64\n"
          ]
        }
      ],
      "source": [
        "# @title Recheck for missing values\n",
        "print(df_selected.isnull().sum())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mRlFBzceM2nM",
        "outputId": "f1940a29-ba0e-48e4-88e5-47d0a6db603a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0\n"
          ]
        }
      ],
      "source": [
        "# @title Check for duplicates\n",
        "print(df_selected.duplicated().sum())"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "viXwV0z1M7h3"
      },
      "source": [
        "Now, all the missing values are fixed and no duplicate values"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 790
        },
        "id": "vGHb3XBGNMpa",
        "outputId": "8d4754f7-de90-4c8b-cf25-f95de6f8aeb5"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id                                               name  host_id  \\\n",
              "3  275343  Rental unit in Singapore · ★4.40 · 1 bedroom ·...  1439258   \n",
              "4  275344  Rental unit in Singapore · ★4.54 · 1 bedroom ·...  1439258   \n",
              "6  294281  Rental unit in Singapore · ★4.43 · 2 bedrooms ...  1521514   \n",
              "7  324945  Rental unit in Singapore · ★3.62 · 1 bedroom ·...  1439258   \n",
              "8  330095  Rental unit in Singapore · ★4.50 · 1 bedroom ·...  1439258   \n",
              "\n",
              "   host_name neighbourhood     room_type  price last_review  \\\n",
              "3        Kay   Bukit Merah  Private room     55  2022-08-13   \n",
              "4        Kay   Bukit Merah  Private room     69  2023-03-23   \n",
              "6  Elizabeth        Newton  Private room     85  2020-01-21   \n",
              "7        Kay   Bukit Merah  Private room     55  2022-07-25   \n",
              "8        Kay   Bukit Merah  Private room     49  2023-06-21   \n",
              "\n",
              "   reviews_per_month  availability_365 rating  \n",
              "3               0.18               301    4.4  \n",
              "4               0.11                57   4.54  \n",
              "6               0.96               365   4.43  \n",
              "7               0.13               235   3.62  \n",
              "8               0.04               299    4.5  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-8b596d74-25c4-4f1d-be90-efe9e6d037a0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>host_id</th>\n",
              "      <th>host_name</th>\n",
              "      <th>neighbourhood</th>\n",
              "      <th>room_type</th>\n",
              "      <th>price</th>\n",
              "      <th>last_review</th>\n",
              "      <th>reviews_per_month</th>\n",
              "      <th>availability_365</th>\n",
              "      <th>rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>275343</td>\n",
              "      <td>Rental unit in Singapore · ★4.40 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>Private room</td>\n",
              "      <td>55</td>\n",
              "      <td>2022-08-13</td>\n",
              "      <td>0.18</td>\n",
              "      <td>301</td>\n",
              "      <td>4.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>275344</td>\n",
              "      <td>Rental unit in Singapore · ★4.54 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>Private room</td>\n",
              "      <td>69</td>\n",
              "      <td>2023-03-23</td>\n",
              "      <td>0.11</td>\n",
              "      <td>57</td>\n",
              "      <td>4.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>294281</td>\n",
              "      <td>Rental unit in Singapore · ★4.43 · 2 bedrooms ...</td>\n",
              "      <td>1521514</td>\n",
              "      <td>Elizabeth</td>\n",
              "      <td>Newton</td>\n",
              "      <td>Private room</td>\n",
              "      <td>85</td>\n",
              "      <td>2020-01-21</td>\n",
              "      <td>0.96</td>\n",
              "      <td>365</td>\n",
              "      <td>4.43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>324945</td>\n",
              "      <td>Rental unit in Singapore · ★3.62 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>Private room</td>\n",
              "      <td>55</td>\n",
              "      <td>2022-07-25</td>\n",
              "      <td>0.13</td>\n",
              "      <td>235</td>\n",
              "      <td>3.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>330095</td>\n",
              "      <td>Rental unit in Singapore · ★4.50 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>Private room</td>\n",
              "      <td>49</td>\n",
              "      <td>2023-06-21</td>\n",
              "      <td>0.04</td>\n",
              "      <td>299</td>\n",
              "      <td>4.5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8b596d74-25c4-4f1d-be90-efe9e6d037a0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-505a0cdb-8297-41bc-abce-c68bb5fb00f8\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-505a0cdb-8297-41bc-abce-c68bb5fb00f8')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-505a0cdb-8297-41bc-abce-c68bb5fb00f8 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-8b596d74-25c4-4f1d-be90-efe9e6d037a0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-8b596d74-25c4-4f1d-be90-efe9e6d037a0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ],
      "source": [
        "# @title Filter the DataFrame to include only the selected neighborhoods\n",
        "selected_neighborhoods = ['Downtown Core', 'Geylang', 'Kallang', 'Bukit Merah',\n",
        "                          'Queenstown', 'Bukit Timah', 'River Valley', 'Toa Payoh',\n",
        "                          'Marina South', 'Clementi', 'Novena', 'Tanglin', 'Newton',\n",
        "                          'Marine Parade']\n",
        "df_filtered = df_selected.loc[df_selected['neighbourhood'].isin(selected_neighborhoods)]\n",
        "\n",
        "df_filtered.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8fg86ZhKNQSW",
        "outputId": "70a346e3-e5ad-4e8d-a1c0-6c7838a16023"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of rows: 2084\n"
          ]
        }
      ],
      "source": [
        "# Count df_filtered rows\n",
        "\n",
        "warnings.filterwarnings(\"ignore\", category=DeprecationWarning)\n",
        "\n",
        "filtered_rows = df_filtered.shape[0]\n",
        "print(\"Number of rows:\", filtered_rows)\n",
        "\n",
        "warnings.filterwarnings(\"default\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xUqK6AZHNU89",
        "outputId": "8cb0e047-3a10-478a-86e6-57aff9b514e3"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['Bukit Merah' 'Newton' 'River Valley' 'Kallang' 'Bukit Timah'\n",
            " 'Downtown Core' 'Marine Parade' 'Novena' 'Queenstown' 'Tanglin' 'Geylang'\n",
            " 'Toa Payoh' 'Clementi' 'Marina South']\n"
          ]
        }
      ],
      "source": [
        "# @title Create new variable (neighbourhood_names)\n",
        "\n",
        "# Select unique values from df_filtered\n",
        "neighbourhood_names = df_filtered['neighbourhood'].unique()\n",
        "\n",
        "print(neighbourhood_names)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KvapzqBkNYWF",
        "outputId": "216cf0d4-c036-4e1c-b5ae-947a1cdb2b92"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Kallang          360\n",
            "Downtown Core    341\n",
            "River Valley     232\n",
            "Queenstown       202\n",
            "Novena           193\n",
            "Bukit Merah      191\n",
            "Geylang          156\n",
            "Marine Parade     85\n",
            "Clementi          84\n",
            "Newton            69\n",
            "Tanglin           69\n",
            "Toa Payoh         47\n",
            "Bukit Timah       46\n",
            "Marina South       9\n",
            "Name: neighbourhood, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "# @title Count the neighbourhood unique values from df_filtered\n",
        "neighborhood_counts = df_filtered['neighbourhood'].value_counts()\n",
        "\n",
        "print(neighborhood_counts)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "S-SZn2JsNcOB"
      },
      "source": [
        "Despite Kallang having numerous options, its proximity to major tourist attractions remains uncertain. To ensure an exceptional staying experience in Singapore, we will now assess the star ratings to identify the most suitable location."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vm2CaBplNg7r",
        "outputId": "2ab1bf72-b041-47ab-fa08-9644ae1883b1"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "neighbourhood  rating \n",
            "Bukit Merah    Unrated    132\n",
            "               5.0         10\n",
            "               4.8          5\n",
            "               4.67         3\n",
            "               4.72         3\n",
            "                         ... \n",
            "Toa Payoh      4.0          1\n",
            "               4.25         1\n",
            "               4.63         1\n",
            "               4.83         1\n",
            "               5.0          1\n",
            "Name: rating, Length: 359, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "# @title Count the rating by neighbourhood\n",
        "rating_counts = df_filtered.groupby('neighbourhood')['rating'].value_counts()\n",
        "\n",
        "print(rating_counts)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Jrf19vS9NxH0"
      },
      "source": [
        "To enhance comprehension, let's check the visualization."
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Visualization"
      ],
      "metadata": {
        "id": "QL6dQcfJwGk8"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 504
        },
        "id": "PVdg2TUxNx_O",
        "outputId": "41c93729-c4ae-41dd-bf88-b04564df10fa"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 0 Axes>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# @title Visualization with barplot\n",
        "\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "\n",
        "# Replace 'df_filtered' with your actual DataFrame name\n",
        "df_filtered['rating'] = df_filtered['rating'].astype(str).replace('nan', 'Unrated')\n",
        "\n",
        "# Replace 'Unrated' with a numerical value (e.g., 0.00)\n",
        "df_filtered['rating'] = df_filtered['rating'].replace('Unrated', '0.00').astype(float)\n",
        "\n",
        "# Define the desired bin edges and labels for ratings\n",
        "bin_edges = [0.00, 1.00, 3.00, 3.50, 4.00, 4.50, 5.0]\n",
        "\n",
        "# Group by neighborhood and calculate rating counts\n",
        "neighborhoods = df_filtered['neighbourhood']\n",
        "rating_counts_by_neighborhood = df_filtered[df_filtered['neighbourhood'].isin(neighborhoods)].groupby('neighbourhood')['rating'].apply(lambda x: pd.cut(x, bins=bin_edges, right=False).value_counts().sort_index()).unstack(fill_value=0)\n",
        "\n",
        "custom_colors = ['skyblue', '#ff7f0e', '#e377c2', '#d62728',\n",
        "                 '#9467bd', '#8c564b', '#2ca02c']\n",
        "\n",
        "# Create a horizontal bar plot\n",
        "plt.figure(figsize=(6, 4))\n",
        "ax = rating_counts_by_neighborhood.plot(kind='barh', stacked=True, color=custom_colors)\n",
        "\n",
        "# Set the labels and title\n",
        "plt.xlabel('Total Rating Counts')\n",
        "plt.ylabel('Neighbourhood and Rating')\n",
        "plt.title('Count of Ratings by Neighbourhood')\n",
        "\n",
        "plt.legend(loc='upper left', bbox_to_anchor=(1.0, 1.0), title='Rating Color', fontsize='small')\n",
        "\n",
        "# Remove top and right spines\n",
        "ax.spines['top'].set_visible(False)\n",
        "ax.spines['right'].set_visible(False)\n",
        "\n",
        "# Display the plot\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "warnings.filterwarnings(\"default\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Tm75G-GmN5Lm"
      },
      "source": [
        "According to the barplot, Downtown Core surpasses Kallang in terms of the number of places with ratings between 4.5 and 5.0. To determine the most strategically positioned neighborhood for tourism, we will be evaluating the map, we can identify which area offers better accessibility to a wide range of tourist attractions, aiding us in making an optimal choice for our stay in Singapore."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "JoXcZ-n1OFYq"
      },
      "outputs": [],
      "source": [
        "# @title Add attractions in Singapore\n",
        "attractions_singapore = [\"Gardens by the Bay\", \"Marina Bay Sands\",\n",
        "                         \"Sentosa Island\", \"Universal Studios Singapore\",\n",
        "                         \"Orchard Road\", \"Singapore Flyer\", \"Singapore Zoo\",\n",
        "                         \"Night Safari\", \"Jurong Bird Park\", \"S.E.A. Aquarium\",\n",
        "                         \"River Wonders\", \"Wings of Time\",\n",
        "                         \"Singapore River\", \"Singapore DUCKtours\", \"Merlion Park\",\n",
        "                         \"National Museum of Singapore\", \"Adventure Cove Waterpark\",\n",
        "                         \"Chinatown\", \"Singapore Cable Car\", \"ArtScience Museum\"]"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# @title Setup the map visualization\n",
        "\n",
        "# Select columns to keep for new variable to get coordinates\n",
        "columns_get_coordinate = ['neighbourhood', 'latitude',\n",
        "                   'longitude']\n",
        "\n",
        "# Make variable to show only the specified columns on new_df_listing\n",
        "df_coordinate = new_df_listing[columns_get_coordinate]\n",
        "\n",
        "# Filter coordinate by selected neighbourhoods\n",
        "# Selected_neighborhoods contains 14 neighbourhoods\n",
        "df_filtered_coordinate = df_coordinate.loc[df_coordinate['neighbourhood'].isin(selected_neighborhoods)]\n",
        "\n",
        "# Select the columns to make a new Dataframe\n",
        "new_coordinates = ['latitude',\n",
        "                   'longitude']\n",
        "\n",
        "airbnb_coordinate = df_filtered_coordinate[new_coordinates]\n",
        "\n",
        "# Format the coordinate DataFrame\n",
        "coordinate_data = pd.DataFrame(airbnb_coordinate)\n",
        "\n",
        "coordinate_data['formatted_coordinate_data'] = coordinate_data.apply(lambda row: f\"{{{row['latitude']}, {row['longitude']}}}\", axis=1)\n",
        "\n",
        "# Create new variable for coordinate (latitude, longitude)\n",
        "airbnb_data_coordinate = coordinate_data['formatted_coordinate_data']"
      ],
      "metadata": {
        "id": "J20fYq1gBE84"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# @title Map visualization using folium\n",
        "\n",
        "# Create the map centered at Singapore\n",
        "map_singapore4 = folium.Map(location=[1.3521, 103.8198], zoom_start=12)\n",
        "\n",
        "# Airbnb locations with their coordinates (latitude, longitude)\n",
        "given_coordinates = airbnb_data_coordinate\n",
        "\n",
        "# Extract latitude and longitude from the given_coordinates\n",
        "coordinates_list = [list(map(float, coord.strip('{}').split(','))) for coord in given_coordinates]\n",
        "\n",
        "# Create a heatmap layer\n",
        "heatmap_layer = HeatMap(coordinates_list, radius=15, blur=20)\n",
        "\n",
        "# Add the heatmap layer to the map\n",
        "map_singapore4.add_child(heatmap_layer)\n",
        "\n",
        "# Airbnb locations\n",
        "airbnb_locations = neighbourhood_names\n",
        "\n",
        "# Create a MarkerCluster group\n",
        "marker_cluster = MarkerCluster()\n",
        "\n",
        "# Add markers for each location to the MarkerCluster\n",
        "for location in airbnb_locations:\n",
        "    geolocator = Nominatim(user_agent=\"SingaporeMapGeo\")\n",
        "    location_info = geolocator.geocode(location + ', Singapore')\n",
        "    if location_info:\n",
        "        lat, lon = location_info.latitude, location_info.longitude\n",
        "        popup_content = folium.Popup(location, parse_html=True)\n",
        "        folium.Marker([lat, lon], popup=popup_content).add_to(marker_cluster)\n",
        "\n",
        "# Add the MarkerCluster group to the map\n",
        "marker_cluster.add_to(map_singapore4)\n",
        "\n",
        "# Add attraction markers (you can keep the existing code for attractions)\n",
        "attraction_names = attractions_singapore\n",
        "\n",
        "for attraction in attraction_names:\n",
        "    geolocator = Nominatim(user_agent=\"SingaporeMapGeo\")\n",
        "    attraction_info = geolocator.geocode(attraction + ', Singapore')\n",
        "    if attraction_info:\n",
        "        lat, lon = attraction_info.latitude, attraction_info.longitude\n",
        "        folium.Marker([lat, lon], popup=attraction, icon=folium.Icon(color='red')).add_to(map_singapore4)\n",
        "\n",
        "map_singapore4"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 532
        },
        "id": "zrd4h96vUpHb",
        "outputId": "1bfbf18f-2ee9-496b-9c03-f733e0738944"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<folium.folium.Map at 0x7d83f7fe3550>"
            ],
            "text/html": [
              "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><span style=\"color:#565656\">Make this Notebook Trusted to load map: File -> Trust Notebook</span><iframe srcdoc=\"&lt;!DOCTYPE html&gt;\n",
              "&lt;html&gt;\n",
              "&lt;head&gt;\n",
              "    \n",
              "    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;\n",
              "    \n",
              "        &lt;script&gt;\n",
              "            L_NO_TOUCH = false;\n",
              "            L_DISABLE_3D = false;\n",
              "        &lt;/script&gt;\n",
              "    \n",
              "    &lt;style&gt;html, body {width: 100%;height: 100%;margin: 0;padding: 0;}&lt;/style&gt;\n",
              "    &lt;style&gt;#map {position:absolute;top:0;bottom:0;right:0;left:0;}&lt;/style&gt;\n",
              "    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;script src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;script src=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/leaflet@1.9.3/dist/leaflet.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.0/css/all.min.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/Leaflet.awesome-markers/2.0.2/leaflet.awesome-markers.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium/folium/templates/leaflet.awesome.rotate.min.css&quot;/&gt;\n",
              "    \n",
              "            &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,\n",
              "                initial-scale=1.0, maximum-scale=1.0, user-scalable=no&quot; /&gt;\n",
              "            &lt;style&gt;\n",
              "                #map_fc0956a539f9818a94428b66e7dda063 {\n",
              "                    position: relative;\n",
              "                    width: 100.0%;\n",
              "                    height: 100.0%;\n",
              "                    left: 0.0%;\n",
              "                    top: 0.0%;\n",
              "                }\n",
              "                .leaflet-container { font-size: 1rem; }\n",
              "            &lt;/style&gt;\n",
              "        \n",
              "    &lt;script src=&quot;https://cdn.jsdelivr.net/gh/python-visualization/folium@main/folium/templates/leaflet_heat.min.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/1.1.0/leaflet.markercluster.js&quot;&gt;&lt;/script&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/1.1.0/MarkerCluster.css&quot;/&gt;\n",
              "    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/leaflet.markercluster/1.1.0/MarkerCluster.Default.css&quot;/&gt;\n",
              "&lt;/head&gt;\n",
              "&lt;body&gt;\n",
              "    \n",
              "    \n",
              "            &lt;div class=&quot;folium-map&quot; id=&quot;map_fc0956a539f9818a94428b66e7dda063&quot; &gt;&lt;/div&gt;\n",
              "        \n",
              "&lt;/body&gt;\n",
              "&lt;script&gt;\n",
              "    \n",
              "    \n",
              "            var map_fc0956a539f9818a94428b66e7dda063 = L.map(\n",
              "                &quot;map_fc0956a539f9818a94428b66e7dda063&quot;,\n",
              "                {\n",
              "                    center: [1.3521, 103.8198],\n",
              "                    crs: L.CRS.EPSG3857,\n",
              "                    zoom: 12,\n",
              "                    zoomControl: true,\n",
              "                    preferCanvas: false,\n",
              "                }\n",
              "            );\n",
              "\n",
              "            \n",
              "\n",
              "        \n",
              "    \n",
              "            var tile_layer_0e4e8efe0fa90f0be8c6df5e251f4f4e = L.tileLayer(\n",
              "                &quot;https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&quot;,\n",
              "                {&quot;attribution&quot;: &quot;Data by \\u0026copy; \\u003ca target=\\&quot;_blank\\&quot; href=\\&quot;http://openstreetmap.org\\&quot;\\u003eOpenStreetMap\\u003c/a\\u003e, under \\u003ca target=\\&quot;_blank\\&quot; href=\\&quot;http://www.openstreetmap.org/copyright\\&quot;\\u003eODbL\\u003c/a\\u003e.&quot;, &quot;detectRetina&quot;: false, &quot;maxNativeZoom&quot;: 18, &quot;maxZoom&quot;: 18, &quot;minZoom&quot;: 0, &quot;noWrap&quot;: false, &quot;opacity&quot;: 1, &quot;subdomains&quot;: &quot;abc&quot;, &quot;tms&quot;: false}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var heat_map_4a76cb6ee21dc7000af6df73f1661449 = L.heatLayer(\n",
              "                [[1.29015, 103.80814], [1.28836, 103.81144], [1.31142, 103.83924], [1.28828, 103.8102], [1.28636, 103.81138], [1.31144, 103.83784], [1.31129, 103.83788], [1.29335, 103.83768], [1.31221, 103.85832], [1.30938, 103.79812], [1.27663, 103.84498], [1.27585, 103.84597], [1.30416, 103.90076], [1.29065, 103.80941], [1.30492, 103.90315], [1.30425, 103.90097], [1.27716, 103.82299], [1.3092, 103.86339], [1.31208, 103.85846], [1.30663, 103.86243], [1.33389, 103.83454], [1.29245, 103.83742], [1.3072, 103.86359], [1.32359, 103.8498], [1.31108, 103.87374], [1.28419, 103.82765], [1.27525, 103.84524], [1.32453, 103.85255], [1.32485, 103.85143], [1.3117, 103.86028], [1.3117, 103.86028], [1.3117, 103.86028], [1.31117, 103.86214], [1.30692, 103.8007], [1.2805, 103.78439], [1.31179, 103.86002], [1.29565, 103.82867], [1.3111, 103.8812], [1.29997, 103.88536], [1.29489, 103.85401], [1.30778, 103.86171], [1.34081, 103.84165], [1.31288, 103.85792], [1.29887, 103.83603], [1.30793, 103.86276], [1.33305, 103.87235], [1.316, 103.86134], [1.28945, 103.84879], [1.31262, 103.79717], [1.28366, 103.83188], [1.27619, 103.84074], [1.3171, 103.85742], [1.27626, 103.84073], [1.2744, 103.84063], [1.32812, 103.88436], [1.30933, 103.85843], [1.27513, 103.83581], [1.31269, 103.79714], [1.31486, 103.85689], [1.3356, 103.86592], [1.31315, 103.881], [1.31642, 103.85759], [1.31132, 103.79736], [1.31107, 103.79687], [1.32874, 103.88439], [1.32515, 103.84914], [1.296265, 103.840942], [1.29575, 103.76707], [1.34507, 103.76804], [1.31099, 103.85849], [1.32419, 103.85252], [1.3124, 103.85758], [1.27914, 103.85002], [1.30613, 103.78094], [1.32614, 103.8634], [1.27284, 103.84445], [1.30423, 103.784], [1.29407, 103.8284], [1.28843, 103.80247], [1.31461, 103.88467], [1.31519, 103.85735], [1.3073, 103.86344], [1.30751, 103.86163], [1.31555, 103.85649], [1.31271, 103.85702], [1.27311, 103.84078], [1.28872, 103.80408], [1.30634, 103.90207], [1.30743, 103.86305], [1.30928, 103.86342], [1.3075, 103.86268], [1.30627, 103.86415], [1.29694, 103.85557], [1.31334, 103.89381], [1.296265, 103.840942], [1.30803, 103.8627], [1.31662, 103.83582], [1.28172, 103.85193], [1.32218, 103.84192], [1.2802, 103.8507], [1.28199, 103.85358], [1.3072, 103.90167], [1.31131, 103.87242], [1.31147, 103.86072], [1.32205, 103.84122], [1.29673, 103.8574], [1.28535, 103.85062], [1.28775, 103.85017], [1.3117, 103.86028], [1.31458, 103.85076], [1.29672, 103.8572], [1.33284, 103.87767], [1.30959, 103.87369], [1.30975, 103.87248], [1.31106, 103.87212], [1.31103, 103.87422], [1.31161, 103.8741], [1.30976, 103.87371], [1.31017, 103.87419], [1.28549, 103.83457], [1.31689, 103.8526], [1.30999, 103.88591], [1.28848, 103.84982], [1.31457, 103.8865], [1.28686, 103.80238], [1.2983, 103.89036], [1.3114, 103.86077], [1.31117, 103.86066], [1.31155, 103.86083], [1.31134, 103.86073], [1.31114, 103.86054], [1.31129, 103.86064], [1.31114, 103.86054], [1.31114, 103.86054], [1.31114, 103.86054], [1.31114, 103.86054], [1.31226, 103.88615], [1.31363, 103.90559], [1.31255, 103.8603], [1.33051, 103.7949], [1.32334, 103.85306], [1.32927, 103.90424], [1.33916, 103.77971], [1.31106, 103.88209], [1.30234, 103.79982], [1.28028, 103.85184], [1.32152, 103.84301], [1.3063, 103.90294], [1.28783, 103.80346], [1.28169, 103.85168], [1.28135, 103.78765], [1.30909, 103.85881], [1.2814, 103.78592], [1.29896, 103.86146], [1.31027, 103.85642], [1.32893, 103.90497], [1.31005, 103.85829], [1.31005, 103.85829], [1.31005, 103.85829], [1.31005, 103.85829], [1.31005, 103.85829], [1.31005, 103.85829], [1.31005, 103.85829], [1.31005, 103.85829], [1.31005, 103.85829], [1.31005, 103.85829], [1.31248, 103.79008], [1.3117, 103.86028], [1.3138, 103.88099], [1.28038, 103.85395], [1.3157, 103.88303], [1.30902, 103.86162], [1.31289, 103.85555], [1.31846, 103.89153], [1.2877, 103.82903], [1.31398, 103.87973], [1.28073, 103.78544], [1.28049, 103.78534], [1.29265, 103.81667], [1.2932534, 103.8111746], [1.30296, 103.78559], [1.27872, 103.84696], [1.2943, 103.8296], [1.31244, 103.79747], [1.31124, 103.87213], [1.31233, 103.86331], [1.31889, 103.82806], [1.275, 103.84334], [1.29488, 103.8305], [1.27526, 103.84462], [1.28341, 103.85075], [1.28146, 103.85122], [1.31586, 103.86049], [1.31284, 103.79736], [1.31626, 103.86002], [1.3147, 103.89289], [1.31001, 103.86278], [1.324, 103.84069], [1.31361, 103.88422], [1.32157, 103.84297], [1.30805, 103.86338], [1.30998, 103.86369], [1.32728, 103.8507], [1.32826, 103.85111], [1.31573, 103.88485], [1.31297, 103.85998], [1.30494, 103.90306], [1.31552, 103.88215], [1.31723, 103.83244], [1.31053, 103.86075], [1.27762, 103.78745], [1.30983, 103.86232], [1.31348, 103.86046], [1.3085, 103.86112], [1.31212, 103.86059], [1.31548, 103.8821], [1.31982, 103.85761], [1.3093, 103.8588], [1.31165, 103.86019], [1.27735, 103.83875], [1.31215, 103.86168], [1.31188, 103.85991], [1.33537, 103.84462], [1.32257, 103.84395], [1.30933, 103.84064], [1.29934, 103.78719], [1.29759, 103.78741], [1.31143, 103.86067], [1.29828, 103.78922], [1.31268, 103.83774], [1.3114, 103.83911], [1.31234, 103.84297], [1.30641, 103.84045], [1.2803, 103.78528], [1.31005, 103.85829], [1.31721, 103.85684], [1.31044, 103.86078], [1.33514, 103.85017], [1.31252, 103.86088], [1.31114, 103.86054], [1.31114, 103.86054], [1.32796, 103.84058], [1.30768, 103.8634], [1.31935, 103.83415], [1.30212, 103.89493], [1.3117, 103.86028], [1.3117, 103.86028], [1.3117, 103.86028], [1.27329, 103.83743], [1.29732, 103.8397], [1.30747, 103.86212], [1.31402, 103.85493], [1.29666, 103.8371], [1.31264, 103.85647], [1.27343, 103.8456], [1.29719, 103.83861], [1.29685, 103.83809], [1.29893, 103.83636], [1.29776, 103.83639], [1.3098, 103.86165], [1.29755, 103.83676], [1.29699, 103.83858], [1.30617, 103.8612], [1.30208, 103.89482], [1.31005, 103.85829], [1.29846, 103.83738], [1.31198, 103.87923], [1.32136, 103.83385], [1.31232, 103.85899], [1.30447, 103.83852], [1.31352, 103.85333], [1.30784, 103.86116], [1.30834, 103.86143], [1.30829, 103.86146], [1.3095, 103.86144], [1.30885, 103.86218], [1.30345, 103.89657], [1.31157, 103.86069], [1.30571, 103.84077], [1.30957, 103.86134], [1.31358, 103.85453], [1.29219, 103.83752], [1.34335, 103.84002], [1.31341, 103.86042], [1.28918, 103.84934], [1.29649, 103.85526], [1.29649, 103.85526], [1.29649, 103.85526], [1.29649, 103.85526], [1.29649, 103.85526], [1.29649, 103.85526], [1.31001, 103.84101], [1.32, 103.76018], [1.31314, 103.88002], [1.30825, 103.84003], [1.27361, 103.84421], [1.29454, 103.76795], [1.31184, 103.88672], [1.29617, 103.84158], [1.30825, 103.8616], [1.31131, 103.87237], [1.30858, 103.86098], [1.30587, 103.89771], [1.30983, 103.862], [1.28386, 103.82993], [1.2746, 103.84181], [1.29765, 103.83627], [1.29558, 103.76533], [1.31112, 103.85809], [1.31633, 103.85318], [1.3172, 103.75876], [1.28142, 103.85261], [1.28143, 103.85232], [1.30944, 103.8828], [1.28203, 103.85404], [1.28065, 103.8519], [1.2795, 103.78385], [1.30791, 103.86305], [1.3101, 103.86166], [1.28116, 103.8536], [1.32449, 103.84315], [1.31021, 103.85817], [1.31498, 103.88642], [1.28782, 103.82832], [1.34401, 103.77275], [1.32699, 103.84962], [1.34156, 103.84194], [1.27619, 103.83665], [1.3147, 103.88163], [1.31541, 103.88217], [1.31539, 103.88213], [1.28684, 103.78593], [1.31439, 103.75904], [1.31505, 103.75884], [1.30928, 103.89457], [1.31039, 103.85819], [1.29614, 103.83546], [1.33463, 103.80969], [1.32165, 103.84119], [1.30852, 103.86103], [1.30895, 103.86149], [1.3097, 103.8617], [1.33253, 103.78883], [1.33048, 103.78882], [1.32161, 103.84791], [1.31672, 103.8597], [1.27528, 103.84398], [1.29514, 103.83672], [1.29867, 103.83666], [1.31351, 103.85355], [1.28455, 103.83142], [1.30996, 103.86357], [1.30041, 103.85857], [1.30041, 103.85857], [1.29934, 103.89046], [1.32528, 103.85035], [1.31263, 103.8587], [1.3101, 103.86233], [1.3147, 103.88163], [1.31563, 103.88228], [1.31496, 103.88168], [1.29951, 103.88525], [1.29951, 103.88525], [1.31249, 103.85768], [1.31353, 103.90487], [1.29574, 103.83687], [1.30957, 103.86113], [1.31475, 103.88165], [1.31606, 103.78816], [1.31222, 103.88308], [1.31322, 103.88377], [1.33195, 103.87706], [1.31214, 103.88408], [1.31233, 103.88297], [1.30936, 103.86254], [1.34228, 103.7723], [1.33236, 103.78722], [1.3147, 103.88163], [1.30736, 103.86222], [1.31064, 103.87986], [1.30418, 103.84057], [1.31049, 103.86129], [1.30979, 103.86145], [1.27424, 103.8443], [1.297, 103.83774], [1.2789, 103.78739], [1.29776, 103.83869], [1.3111, 103.88247], [1.29811, 103.87299], [1.27831, 103.85082], [1.30212, 103.83204], [1.30462, 103.78401], [1.28075, 103.78767], [1.30236, 103.84184], [1.30153, 103.80097], [1.27942, 103.78552], [1.27957, 103.78695], [1.31226, 103.88303], [1.31512, 103.84096], [1.31806, 103.84587], [1.3147, 103.88163], [1.31388, 103.85292], [1.28994, 103.77675], [1.32158, 103.85256], [1.31112, 103.77138], [1.3145, 103.85392], [1.28787, 103.85032], [1.31084, 103.79765], [1.2955, 103.82924], [1.31072, 103.79624], [1.31078, 103.79702], [1.30372, 103.83913], [1.30562, 103.84048], [1.2986, 103.8368], [1.29682, 103.83844], [1.31247, 103.86071], [1.27633, 103.84515], [1.3387, 103.85155], [1.30376, 103.78445], [1.29377, 103.82896], [1.27475, 103.83361], [1.29303, 103.77312], [1.30379, 103.83998], [1.28706, 103.80514], [1.31167, 103.87476], [1.31916, 103.76234], [1.26625, 103.8196], [1.27121, 103.84257], [1.28457, 103.8325], [1.31625, 103.88673], [1.28142, 103.78721], [1.28028, 103.78564], [1.30606, 103.84025], [1.28116, 103.78732], [1.29179, 103.80622], [1.31418, 103.89883], [1.31434, 103.8991], [1.3147, 103.88163], [1.31534, 103.89967], [1.31284, 103.88781], [1.28043, 103.78655], [1.31124, 103.76152], [1.2838, 103.83412], [1.29545, 103.84207], [1.28459, 103.83474], [1.299, 103.83634], [1.28457, 103.83461], [1.31103, 103.88694], [1.30371, 103.84017], [1.2961, 103.85267], [1.29745, 103.85343], [1.2969, 103.85354], [1.30878, 103.86242], [1.3106, 103.86266], [1.27939, 103.78719], [1.31009, 103.86182], [1.30907, 103.86187], [1.28953, 103.81936], [1.28286, 103.83403], [1.2835, 103.8351], [1.31088, 103.8604], [1.31129, 103.88421], [1.27891, 103.78764], [1.28157, 103.78746], [1.32547, 103.86255], [1.32703, 103.86461], [1.29226, 103.80781], [1.2958, 103.83642], [1.30341, 103.78508], [1.3147, 103.88163], [1.31669, 103.84278], [1.31623, 103.8407], [1.31505, 103.84257], [1.28028, 103.78541], [1.29022, 103.80674], [1.31489, 103.88158], [1.3149, 103.88163], [1.31213, 103.86169], [1.31804, 103.85151], [1.29307, 103.82951], [1.31681, 103.84569], [1.3147, 103.88163], [1.31453, 103.89975], [1.30372, 103.83991], [1.31064, 103.85953], [1.31128, 103.86182], [1.31569, 103.88424], [1.28051, 103.838], [1.30487, 103.83859], [1.31334, 103.88331], [1.31144, 103.88325], [1.30185, 103.7997], [1.31068, 103.86118], [1.31083, 103.86232], [1.31512, 103.86098], [1.31287, 103.88075], [1.31343, 103.85318], [1.27624, 103.84524], [1.3091, 103.86033], [1.28116, 103.78731], [1.27349, 103.8436], [1.27558, 103.84381], [1.31157, 103.87373], [1.32883, 103.84856], [1.31154, 103.87348], [1.2948, 103.83988], [1.31534, 103.89967], [1.27369, 103.84395], [1.27317, 103.84584], [1.31095, 103.87955], [1.32231, 103.886], [1.31108, 103.87176], [1.31147, 103.87387], [1.31128, 103.8739], [1.31166, 103.8732], [1.31096, 103.87178], [1.31473, 103.8816], [1.30964, 103.86348], [1.3147, 103.88163], [1.32706, 103.85097], [1.30059, 103.86077], [1.30862, 103.8613], [1.3322, 103.87853], [1.27423, 103.84403], [1.29283, 103.8408], [1.27335, 103.84592], [1.30972, 103.86098], [1.27363, 103.84732], [1.2737, 103.84381], [1.2745, 103.84508], [1.31473, 103.8816], [1.28273, 103.83535], [1.2815, 103.84903], [1.31139, 103.86249], [1.28191, 103.85232], [1.27531, 103.84366], [1.27542, 103.84397], [1.27492, 103.84396], [1.32632, 103.84953], [1.32639, 103.84984], [1.31473, 103.8816], [1.27241, 103.80987], [1.29697, 103.89147], [1.27485, 103.84718], [1.31181, 103.85895], [1.31128, 103.86064], [1.3147, 103.88163], [1.31135, 103.86024], [1.30887, 103.86335], [1.27789, 103.85241], [1.29331, 103.83018], [1.30508, 103.90527], [1.3096, 103.86251], [1.31473, 103.8816], [1.30973, 103.86212], [1.3147, 103.88163], [1.30821, 103.86284], [1.29966, 103.88497], [1.31029, 103.86283], [1.31112, 103.90666], [1.31207, 103.88856], [1.30991, 103.88348], [1.31229, 103.85985], [1.31078, 103.85966], [1.33236, 103.8666], [1.30936, 103.90567], [1.29311, 103.84065], [1.29848, 103.86064], [1.31513, 103.85474], [1.32174, 103.81448], [1.32182, 103.814], [1.31658, 103.85479], [1.3307, 103.86753], [1.27959, 103.84625], [1.27948, 103.85406], [1.2734, 103.8442], [1.31217, 103.86147], [1.2753, 103.8453], [1.31683, 103.75854], [1.30726, 103.89856], [1.31046, 103.86234], [1.27867, 103.78503], [1.30315, 103.86342], [1.29406, 103.82778], [1.28001, 103.78546], [1.2818, 103.78558], [1.31103, 103.87403], [1.27903, 103.84864], [1.30326, 103.86299], [1.27568, 103.84582], [1.28443, 103.83417], [1.27629, 103.84563], [1.3284, 103.85106], [1.29374, 103.8279], [1.33073, 103.86619], [1.28129, 103.78759], [1.33186, 103.86885], [1.3028, 103.86315], [1.28443, 103.83417], [1.31549, 103.75867], [1.28443, 103.83417], [1.28443, 103.83417], [1.31188, 103.86005], [1.30838, 103.86288], [1.33037, 103.86625], [1.28426, 103.83438], [1.28461, 103.83402], [1.2846, 103.834], [1.28443, 103.83417], [1.28429, 103.83433], [1.28443, 103.83417], [1.27383, 103.84636], [1.28414, 103.83401], [1.28434, 103.83395], [1.30493, 103.83752], [1.28438, 103.83383], [1.28412, 103.83408], [1.31516, 103.86111], [1.31397, 103.86151], [1.31549, 103.86139], [1.28289, 103.83225], [1.29425, 103.82748], [1.294, 103.82669], [1.29423, 103.82797], [1.28404, 103.83408], [1.28451, 103.83381], [1.29872, 103.86055], [1.3104, 103.86166], [1.28405, 103.83417], [1.31499, 103.90373], [1.28428, 103.83395], [1.30199, 103.82875], [1.31023, 103.86146], [1.29261, 103.82625], [1.28436, 103.83392], [1.29843, 103.82838], [1.27615, 103.84504], [1.30443, 103.78363], [1.31096, 103.85202], [1.31439, 103.84467], [1.29436, 103.82907], [1.29417, 103.83844], [1.30083, 103.8581], [1.28983, 103.8323], [1.32861, 103.86406], [1.31806, 103.85307], [1.31713, 103.82727], [1.30147, 103.90203], [1.29544, 103.84183], [1.31736, 103.82718], [1.27527, 103.8454], [1.27316, 103.84518], [1.28559, 103.8332], [1.29191, 103.80647], [1.27864, 103.78706], [1.31068, 103.86118], [1.3147, 103.88163], [1.29047, 103.80677], [1.2951, 103.82826], [1.31098, 103.86005], [1.3147, 103.88163], [1.30834, 103.86318], [1.2880517801160958, 103.83100449535368], [1.29229, 103.85011], [1.3101, 103.8621], [1.27654, 103.84509], [1.3269, 103.85245], [1.31588, 103.90364], [1.3147, 103.88163], [1.3147, 103.88163], [1.31006, 103.86226], [1.31144, 103.86032], [1.27499, 103.84535], [1.34036, 103.87977], [1.3147, 103.88163], [1.30738, 103.76242], [1.30348, 103.78388], [1.31017, 103.86266], [1.2836, 103.8294], [1.29702, 103.80439], [1.30482, 103.78462], [1.28976, 103.84939], [1.28612, 103.83153], [1.2844, 103.83353], [1.28471, 103.83366], [1.28389, 103.83154], [1.28584, 103.83342], [1.31197, 103.76126], [1.28426, 103.8336], [1.28454, 103.83187], [1.3112, 103.7953], [1.28549, 103.83389], [1.29104, 103.82984], [1.31864, 103.84894], [1.34197, 103.77331], [1.33984, 103.77312], [1.33957, 103.77295], [1.34023, 103.77124], [1.31197, 103.76135], [1.29204, 103.8068], [1.31932, 103.84737], [1.29828, 103.83866], [1.29858, 103.76422], [1.30693, 103.76314], [1.30971, 103.85948], [1.31167, 103.85816], [1.31055, 103.85994], [1.28864, 103.85], [1.31477, 103.855], [1.31689, 103.85484], [1.30268, 103.83166], [1.2905714424537125, 103.84984406623494], [1.29869, 103.84119], [1.29912, 103.84106], [1.31623, 103.9], [1.31034, 103.83846], [1.31291, 103.88671], [1.31249, 103.88851], [1.30062, 103.83062], [1.31292, 103.79761], [1.27553, 103.84522], [1.30751, 103.83773], [1.31117, 103.86214], [1.27457, 103.84661], [1.28906, 103.84943], [1.3252, 103.84058], [1.3029, 103.86337], [1.31878, 103.85252], [1.30286, 103.86332], [1.30302, 103.86283], [1.3032, 103.86256], [1.30332, 103.86344], [1.33185, 103.86606], [1.31603, 103.84066], [1.28018, 103.7856], [1.26586, 103.8101], [1.28456, 103.83405], [1.28456, 103.83405], [1.28355, 103.83323], [1.28456, 103.83405], [1.31875, 103.84413], [1.26705, 103.81141], [1.267, 103.81143], [1.29409, 103.82826], [1.29388, 103.828], [1.29387, 103.82651], [1.29386, 103.82652], [1.31259, 103.75838], [1.28138, 103.85332], [1.27338, 103.84546], [1.30686, 103.89806], [1.31462, 103.8587], [1.31599, 103.8604], [1.31649, 103.85976], [1.31045, 103.86321], [1.31354, 103.75811], [1.31117, 103.86214], [1.31656, 103.85981], [1.31498, 103.86018], [1.31114, 103.873], [1.31357, 103.85742], [1.31227, 103.85819], [1.31101, 103.86232], [1.27427, 103.84092], [1.31377, 103.85808], [1.27384, 103.84411], [1.3245, 103.85045], [1.32599, 103.84926], [1.32449, 103.84881], [1.32585, 103.85087], [1.32645, 103.8511], [1.32441, 103.85074], [1.27427, 103.84092], [1.3147, 103.88163], [1.31068, 103.86118], [1.27427, 103.84092], [1.29722, 103.85346], [1.27584, 103.84549], [1.32001, 103.88205], [1.27533, 103.84535], [1.2754, 103.84577], [1.27391, 103.84374], [1.30244, 103.82695], [1.2937, 103.82806], [1.27591, 103.83948], [1.32781, 103.84838], [1.30937, 103.76104], [1.3155, 103.88063], [1.30284, 103.8634], [1.28302, 103.83199], [1.31514, 103.84052], [1.33106, 103.86605], [1.31394, 103.85861], [1.31445, 103.83125], [1.28008, 103.85375], [1.28044, 103.85132], [1.3124, 103.82537], [1.31405, 103.82495], [1.31068, 103.86118], [1.31189, 103.86001], [1.31246, 103.85964], [1.31237, 103.82479], [1.31391, 103.82689], [1.3119, 103.86136], [1.29149, 103.84976], [1.28956, 103.85074], [1.27429, 103.84513], [1.31158, 103.8609], [1.29986, 103.86123], [1.29914, 103.86103], [1.30824, 103.79696], [1.30845, 103.79902], [1.32204, 103.85153], [1.27222, 103.83564], [1.31989, 103.85361], [1.28069, 103.78512], [1.30275, 103.7841], [1.27536, 103.83988], [1.3097, 103.86076], [1.30959, 103.86141], [1.31055, 103.83819], [1.30859, 103.84014], [1.31047, 103.83981], [1.30596, 103.83483], [1.29432, 103.80477], [1.31573, 103.80362], [1.30953, 103.86042], [1.30973, 103.86054], [1.31592, 103.85406], [1.3147, 103.88163], [1.31347, 103.85777], [1.30968, 103.86086], [1.31781, 103.84667], [1.31754, 103.84687], [1.31801, 103.84881], [1.31932, 103.84659], [1.3109, 103.86021], [1.31386, 103.85931], [1.27316, 103.84638], [1.2758, 103.84006], [1.30965, 103.86186], [1.3084, 103.82597], [1.32744, 103.86243], [1.27996, 103.8464], [1.2748, 103.84702], [1.29452, 103.83706], [1.2907, 103.82812], [1.3223, 103.75713], [1.32588, 103.86234], [1.31131, 103.86041], [1.27634, 103.84507], [1.31234, 103.8578], [1.29746, 103.84153], [1.29762, 103.84157], [1.27317, 103.83434], [1.27368, 103.83432], [1.27228, 103.83394], [1.27386, 103.83233], [1.27437, 103.83293], [1.31212, 103.86349], [1.31728, 103.82826], [1.30674, 103.89852], [1.27229, 103.83286], [1.27399, 103.83267], [1.31237, 103.88693], [1.31399, 103.89803], [1.31648, 103.88486], [1.31854, 103.88207], [1.31017, 103.85999], [1.31531, 103.88457], [1.31683, 103.8826], [1.27219, 103.83402], [1.28432, 103.83387], [1.31094, 103.76303], [1.28021, 103.85311], [1.27454, 103.83258], [1.28387, 103.835], [1.27292, 103.83383], [1.29303, 103.76369], [1.27475, 103.83404], [1.28656, 103.82586], [1.27454, 103.84002], [1.27529, 103.84388], [1.27233, 103.83318], [1.28028, 103.8487], [1.27407, 103.83426], [1.27504, 103.83424], [1.2974, 103.85334], [1.27483, 103.8347], [1.27286, 103.83418], [1.28338, 103.8352], [1.29323, 103.76341], [1.30124, 103.80098], [1.27497, 103.83395], [1.31806, 103.7621], [1.30775, 103.89944], [1.30262, 103.76654], [1.30766, 103.89948], [1.29979, 103.85857], [1.27484, 103.83239], [1.30775, 103.89944], [1.28174, 103.78598], [1.30818, 103.90032], [1.30065, 103.82882], [1.27967, 103.7876], [1.29963, 103.86129], [1.28125, 103.78541], [1.28114, 103.78561], [1.28187, 103.78712], [1.28147, 103.78536], [1.28127, 103.78577], [1.2796, 103.78536], [1.31011, 103.90284], [1.27489, 103.83283], [1.27489, 103.83246], [1.31586, 103.88265], [1.30442, 103.76693], [1.28165, 103.78733], [1.28156, 103.78553], [1.28153, 103.78572], [1.28152, 103.78567], [1.28098, 103.78765], [1.27971, 103.78764], [1.27987, 103.78742], [1.27991, 103.78543], [1.31433, 103.88301], [1.30178, 103.83315], [1.31042, 103.87204], [1.31159, 103.87205], [1.2738, 103.84515], [1.2805, 103.8518], [1.31078, 103.85779], [1.31559, 103.88275], [1.3116, 103.86012], [1.30996, 103.86019], [1.3127, 103.86127], [1.27454, 103.82317], [1.31006, 103.86192], [1.3125, 103.86121], [1.28378, 103.83318], [1.30059, 103.86113], [1.29194, 103.76775], [1.33506, 103.78559], [1.29196, 103.7697], [1.31305, 103.88743], [1.29133, 103.76769], [1.28401, 103.785], [1.2837, 103.78496], [1.3119, 103.86177], [1.27526, 103.84376], [1.27412, 103.84434], [1.2984, 103.83397], [1.31713, 103.88446], [1.29529, 103.84], [1.2951, 103.84071], [1.34103, 103.88288], [1.30712, 103.89969], [1.32813, 103.84965], [1.31983, 103.86112], [1.2823, 103.78702], [1.27874, 103.84688], [1.32201, 103.85756], [1.31053, 103.86003], [1.27548, 103.84497], [1.29433, 103.84125], [1.29647, 103.8577], [1.29656, 103.85775], [1.31368, 103.8915], [1.30963, 103.86018], [1.29321, 103.7691], [1.31473, 103.8816], [1.31161, 103.86259], [1.31149, 103.83788], [1.31994, 103.8535], [1.30322, 103.86345], [1.31343, 103.85975], [1.29302, 103.84111], [1.31095, 103.76157], [1.27596, 103.84473], [1.295, 103.82815], [1.29838, 103.85742], [1.27757, 103.79415], [1.32655, 103.85072], [1.27501, 103.84688], [1.29535, 103.80473], [1.2928730249404907, 103.8303451538086], [1.28698, 103.78654], [1.27989, 103.85201], [1.30966, 103.86045], [1.30968, 103.8616], [1.31121, 103.86082], [1.32031, 103.84703], [1.3048, 103.83786], [1.31583, 103.88123], [1.2733, 103.84407], [1.30557, 103.89986], [1.31559, 103.82586], [1.29859, 103.86059], [1.30111, 103.82859], [1.31051, 103.8275], [1.31831, 103.84588], [1.32805, 103.84948], [1.27347, 103.84404], [1.30845, 103.86112], [1.33678, 103.78016], [1.3041, 103.78494], [1.31135, 103.86035], [1.27599, 103.84562], [1.27477, 103.84523], [1.31447, 103.88277], [1.31033, 103.86028], [1.30448, 103.78504], [1.29698, 103.80473], [1.31278, 103.82472], [1.32137, 103.86206], [1.30674, 103.83562], [1.30663, 103.83553], [1.27311, 103.83601], [1.27878, 103.84626], [1.27567, 103.84587], [1.31664, 103.84124], [1.31374, 103.85438], [1.2967, 103.85543], [1.29658, 103.85595], [1.27459, 103.84437], [1.30748, 103.90001], [1.34126, 103.76739], [1.34129, 103.76615], [1.27966, 103.78627], [1.28542, 103.83445], [1.31389, 103.88913], [1.29687, 103.80467], [1.31318, 103.89045], [1.32005, 103.88083], [1.27394, 103.84497], [1.31263, 103.88808], [1.32991, 103.86718], [1.31496, 103.88963], [1.33278, 103.78869], [1.31853, 103.82628], [1.27547, 103.84571], [1.27638, 103.84538], [1.32899, 103.84263], [1.29817, 103.89594], [1.28893, 103.82746], [1.27767, 103.84902], [1.30165, 103.79062], [1.28548, 103.85896], [1.2738, 103.84713], [1.31324, 103.84037], [1.31405, 103.8395], [1.27901, 103.84844], [1.31784, 103.88605], [1.33896, 103.84203], [1.31681, 103.84136], [1.27498, 103.83238], [1.3055, 103.89933], [1.31714, 103.84355], [1.29673, 103.83746], [1.296, 103.83673], [1.29651, 103.83883], [1.28471, 103.83391], [1.28332, 103.83424], [1.30617, 103.83466], [1.29466, 103.83664], [1.32137, 103.85349], [1.30172, 103.83166], [1.29196, 103.80772], [1.30515, 103.89854], [1.29666, 103.83699], [1.29671, 103.83711], [1.2984, 103.84087], [1.29845, 103.84129], [1.29557, 103.83844], [1.29021, 103.80631], [1.30449, 103.83822], [1.30539, 103.89791], [1.33049, 103.8677], [1.33177, 103.86631], [1.3427, 103.86753], [1.31009, 103.86171], [1.29648, 103.8571], [1.29827, 103.8576], [1.29635, 103.85682], [1.30642, 103.84189], [1.31661, 103.84695], [1.32071, 103.85345], [1.32017, 103.85177], [1.30059, 103.88561], [1.31455, 103.7583], [1.30729, 103.78285], [1.29247, 103.84089], [1.2763, 103.84546], [1.29191, 103.84025], [1.29197, 103.84052], [1.29225, 103.84032], [1.33003, 103.86728], [1.29404, 103.82651], [1.30449, 103.76522], [1.29869, 103.76417], [1.30016, 103.76376], [1.29995, 103.76604], [1.29996, 103.76571], [1.29834, 103.76583], [1.29869, 103.76415], [1.28536, 103.78664], [1.30987, 103.7619], [1.32389, 103.8475], [1.32417, 103.84534], [1.30919, 103.76177], [1.28091, 103.85189], [1.29774, 103.83788], [1.31027, 103.76033], [1.29231, 103.80741], [1.27969, 103.78618], [1.27637, 103.84586], [1.31109, 103.861], [1.2802, 103.85392], [1.29152, 103.76149], [1.31889, 103.84879], [1.3145, 103.84687], [1.3174, 103.84859], [1.31755, 103.84892], [1.31937, 103.84827], [1.31756, 103.84693], [1.30006, 103.88389], [1.31193, 103.86304], [1.28367, 103.83527], [1.26611, 103.8096], [1.2735, 103.83252], [1.28152, 103.85391], [1.31837, 103.82708], [1.2745, 103.83451], [1.2958, 103.84179], [1.3277, 103.86393], [1.32478, 103.90492], [1.29682, 103.83676], [1.298, 103.85571], [1.29628, 103.85681], [1.28494, 103.8337], [1.28624, 103.83417], [1.28639, 103.8337], [1.29823, 103.85561], [1.28429, 103.83515], [1.29674, 103.85733], [1.27975, 103.78745], [1.2801, 103.78778], [1.31911, 103.84695], [1.31781, 103.84861], [1.3175, 103.84829], [1.31729, 103.84692], [1.31917, 103.84845], [1.29575, 103.80359], [1.27829, 103.84552], [1.31544, 103.83089], [1.30033, 103.76588], [1.27576, 103.84571], [1.27433, 103.84526], [1.27404, 103.84398], [1.28172, 103.85342], [1.30038, 103.76371], [1.30351, 103.83823], [1.30082, 103.88613], [1.30053, 103.88421], [1.30056, 103.88594], [1.31219, 103.85944], [1.31158, 103.85606], [1.31274, 103.85842], [1.31569, 103.85619], [1.31267, 103.8566], [1.30456, 103.8405], [1.27773, 103.84547], [1.30431, 103.82952], [1.30442, 103.82895], [1.30412, 103.82928], [1.30406, 103.82936], [1.31331, 103.85854], [1.29649, 103.84203], [1.2961, 103.85761], [1.2962, 103.85731], [1.27469, 103.84237], [1.30956, 103.86201], [1.31974, 103.7525], [1.3115, 103.85825], [1.31822, 103.85549], [1.31783, 103.88117], [1.28097, 103.85391], [1.31477, 103.82442], [1.29553, 103.85412], [1.2999, 103.79909], [1.30206, 103.80034], [1.31946, 103.88027], [1.319024, 103.88076], [1.31816, 103.76098], [1.28237, 103.85227], [1.3005, 103.88423], [1.31798, 103.85175], [1.30965, 103.86018], [1.27386, 103.84206], [1.27971, 103.78613], [1.31293, 103.85846], [1.27518, 103.84715], [1.27413, 103.84231], [1.33066, 103.86806], [1.28142, 103.85374], [1.31981, 103.88068], [1.27433, 103.84194], [1.32535, 103.85167], [1.3255, 103.85017], [1.32557, 103.85022], [1.32339, 103.85028], [1.32513, 103.8515], [1.29714, 103.8535], [1.29692, 103.85279], [1.2931220531463623, 103.83050537109376], [1.31979, 103.75252], [1.33007, 103.86666], [1.31877, 103.85915], [1.28322, 103.86175], [1.28284, 103.86139], [1.27793, 103.84522], [1.28101, 103.85378], [1.280867, 103.852531], [1.2983, 103.83294], [1.29509, 103.80579], [1.2824, 103.78262], [1.3020578310072566, 103.90501539277686], [1.31794, 103.88187], [1.31814, 103.88212], [1.296, 103.80782], [1.31715, 103.76133], [1.30567, 103.89778], [1.31844, 103.82627], [1.27751, 103.8474], [1.27567, 103.8494], [1.29459, 103.84012], [1.29978, 103.79959], [1.29582, 103.80731], [1.30701, 103.76976], [1.30785, 103.76787], [1.29397, 103.79737], [1.30055, 103.85866], [1.29044, 103.83248], [1.29277, 103.83911], [1.29714, 103.85355], [1.27757, 103.84827], [1.27766, 103.84738], [1.31564, 103.85457], [1.30854, 103.82984], [1.3212, 103.88034], [1.32013, 103.85287], [1.32004, 103.85217], [1.32005, 103.85216], [1.31834, 103.8278], [1.31032, 103.82681], [1.28159, 103.85183], [1.32606, 103.84689], [1.32414, 103.84527], [1.32563, 103.84532], [1.32168, 103.86365], [1.32001, 103.86503], [1.29334, 103.8396], [1.32585, 103.84677], [1.29854, 103.8416], [1.29915, 103.83961], [1.27782, 103.84746], [1.31763, 103.84865], [1.28149, 103.85163], [1.27743, 103.84837], [1.32052, 103.75308], [1.318528, 103.847511], [1.318528, 103.847511], [1.3178, 103.8483], [1.31734, 103.84217], [1.30341, 103.86356], [1.31921, 103.84676], [1.318528, 103.847511], [1.31867, 103.84683], [1.31781, 103.84852], [1.31761, 103.84837], [1.29734, 103.82659], [1.318528, 103.847511], [1.318528, 103.847511], [1.3196, 103.84804], [1.3115, 103.85708], [1.31758, 103.84717], [1.31288, 103.85769], [1.31954, 103.84712], [1.318528, 103.847511], [1.318528, 103.847511], [1.318528, 103.847511], [1.32525, 103.85034], [1.318528, 103.847511], [1.30179, 103.82864], [1.3111, 103.85787], [1.30151, 103.79785], [1.318528, 103.847511], [1.318528, 103.847511], [1.32629, 103.84921], [1.318528, 103.847511], [1.31853, 103.84751], [1.318528, 103.847511], [1.318528, 103.847511], [1.318528, 103.847511], [1.318528, 103.847511], [1.282128, 103.858704], [1.31109, 103.90705], [1.27928, 103.83754], [1.29304, 103.81724], [1.28359, 103.86182], [1.31172, 103.88578], [1.318524, 103.847511], [1.318524, 103.847511], [1.318524, 103.847511], [1.318524, 103.847511], [1.31878, 103.84838], [1.31829, 103.84646], [1.31266, 103.88453], [1.30128, 103.85697], [1.30081, 103.85706], [1.28522, 103.83317], [1.28648, 103.83366], [1.29896, 103.88392], [1.30017, 103.886], [1.28668, 103.83444], [1.28509, 103.83333], [1.30276, 103.90158], [1.30006, 103.85989], [1.31898, 103.84683], [1.29874, 103.84127], [1.31122, 103.85807], [1.28021, 103.78408], [1.30601, 103.83408], [1.318524, 103.847511], [1.318524, 103.847511], [1.31815, 103.84841], [1.29835, 103.85834], [1.29876, 103.86027], [1.2984, 103.86009], [1.3183, 103.84652], [1.32641, 103.83715], [1.31391, 103.85675], [1.30871, 103.83706], [1.29225, 103.77137], [1.27649, 103.85472], [1.30475, 103.84638], [1.32514, 103.85188], [1.31499, 103.80648], [1.29168, 103.76218], [1.31684, 103.83967], [1.3161443673849216, 103.83748385203089], [1.29674, 103.83941], [1.30169, 103.85695], [1.30086, 103.85726], [1.30167, 103.8567], [1.31584, 103.85703], [1.29615, 103.83811], [1.32523, 103.85183], [1.29043, 103.8089], [1.27825, 103.85154], [1.31618, 103.85503], [1.300727, 103.788452], [1.29588, 103.8055], [1.318524, 103.847511], [1.31896, 103.84668], [1.33062, 103.87531], [1.27968, 103.85193], [1.29862, 103.7877], [1.29905, 103.78739], [1.31945, 103.83388], [1.300834, 103.788559], [1.29581, 103.83797], [1.30866, 103.89473], [1.29478, 103.8382], [1.29466, 103.83946], [1.29673, 103.84027], [1.2962, 103.83977], [1.29528, 103.84019], [1.2966, 103.8402], [1.296, 103.83997], [1.30939, 103.86245], [1.28884, 103.83191], [1.3088, 103.89538], [1.28152, 103.8573], [1.28245, 103.85788], [1.31049, 103.89469], [1.31806, 103.84458], [1.31462, 103.8589], [1.27128, 103.79836], [1.27126, 103.79836], [1.27016, 103.79775], [1.30261, 103.86342], [1.3082, 103.76833], [1.27014, 103.79798], [1.2699529068025708, 103.79803548345214], [1.28291, 103.85879], [1.31521, 103.8425], [1.28245, 103.85788], [1.27016, 103.79832], [1.30744, 103.89537], [1.28328, 103.8585], [1.28147, 103.85674], [1.2849, 103.84892], [1.30596, 103.76697], [1.317613, 103.85199], [1.28339, 103.85764], [1.27902, 103.78622], [1.28146, 103.85904], [1.28161, 103.85859], [1.28245, 103.85788], [1.28245, 103.85788], [1.28245, 103.85788], [1.28131, 103.85674], [1.2964, 103.83846], [1.29661, 103.83956], [1.2947, 103.84002], [1.29494, 103.84016], [1.33021, 103.86669], [1.28175, 103.85845], [1.30773, 103.76954], [1.30993, 103.76127], [1.285, 103.84968], [1.31131, 103.86081], [1.29464, 103.84009], [1.31219, 103.88038], [1.283671, 103.860489], [1.2909, 103.83195], [1.28918, 103.83042], [1.30431, 103.78495], [1.28896, 103.83108], [1.29049, 103.83248], [1.31749, 103.84582], [1.2950398064438615, 103.83808971426872], [1.29615, 103.84074], [1.28179, 103.85726], [1.337961, 103.870148], [1.29662, 103.83913], [1.318524, 103.847511], [1.32429, 103.84535], [1.32615, 103.84621], [1.2907, 103.83218], [1.29057, 103.83237], [1.28058, 103.78438], [1.2922, 103.8063], [1.29187, 103.80634], [1.30835, 103.76131], [1.31019, 103.76283], [1.27004, 103.79657], [1.30478, 103.78475], [1.31903, 103.84564], [1.28035, 103.78627], [1.27849, 103.78625], [1.28422, 103.85926], [1.33893, 103.86796], [1.30762, 103.76744], [1.29664, 103.8069], [1.29669, 103.80714], [1.30325, 103.78495], [1.31348, 103.88217], [1.32026, 103.84254], [1.32196, 103.84222], [1.30835, 103.76936], [1.33898, 103.86878], [1.29337, 103.83989], [1.28049, 103.78609], [1.28322, 103.85863], [1.28286, 103.85884], [1.28174, 103.85729], [1.28158, 103.85883], [1.31443, 103.88853], [1.31638, 103.84279], [1.29848, 103.78732], [1.29864, 103.78694], [1.31562, 103.85674], [1.29908, 103.84004], [1.30478, 103.83771], [1.29616, 103.82899], [1.32481, 103.85227], [1.28437, 103.85082], [1.29663, 103.84248], [1.27599, 103.84715], [1.31095, 103.88666], [1.3148128, 103.8984635], [1.32396, 103.85283], [1.32396, 103.85283], [1.32396, 103.85283], [1.3374, 103.86981], [1.27473, 103.8421], [1.27454, 103.84188], [1.27402, 103.84229], [1.2966, 103.83821], [1.31512, 103.89748], [1.31537, 103.89756], [1.3148128, 103.8984635], [1.3148128, 103.8984635], [1.3148128, 103.8984635], [1.3393, 103.87065], [1.2850454, 103.8347855], [1.28421, 103.83513], [1.28467, 103.83365], [1.31906, 103.76248], [1.2824499, 103.8578807], [1.33882, 103.86837], [1.2961, 103.83991], [1.32053, 103.78986], [1.2961758654508202, 103.8379166676336], [1.29484, 103.84001], [1.3253072, 103.8498993], [1.33958, 103.87069], [1.28222, 103.85701], [1.31723, 103.77714], [1.3059542906420272, 103.83397622408634], [1.32314, 103.86622], [1.32407, 103.84741], [1.31681, 103.84436], [1.28493, 103.85109], [1.28495, 103.84947], [1.29257, 103.80564], [1.31285, 103.85964], [1.2916445, 103.8048721], [1.3215313, 103.8527231], [1.3066844276786602, 103.9046211540699], [1.2916821, 103.8048268], [1.3095, 103.85837], [1.31385, 103.89967], [1.2951072, 103.8285254], [1.29715, 103.83789], [1.2773465, 103.8536086], [1.29282, 103.83794], [1.34049, 103.85204], [1.30511, 103.83492], [1.32729, 103.84723], [1.31981, 103.77742], [1.3117441, 103.8602406], [1.3117441, 103.8602406], [1.31285, 103.86064], [1.31886, 103.8441], [1.3157676, 103.8459867], [1.31134, 103.85985], [1.2818, 103.85875], [1.2944, 103.83934], [1.28189, 103.85865], [1.32291, 103.89214], [1.32239, 103.89148], [1.31928, 103.76115], [1.28366, 103.8268], [1.26662, 103.82475], [1.32551, 103.85063], [1.30331, 103.91041], [1.316481, 103.8299766], [1.3185236, 103.8475129], [1.28462, 103.85966], [1.29096, 103.85058], [1.3272054, 103.8419479], [1.2931364, 103.8063663], [1.28456, 103.83399], [1.28399, 103.83427], [1.28443, 103.83375], [1.28338, 103.85742], [1.28608, 103.83456], [1.2844, 103.83387], [1.28622, 103.83441], [1.2804, 103.84968], [1.31095, 103.86034], [1.28382, 103.86044], [1.2808512, 103.8529161], [1.29744, 103.85603], [1.29733, 103.85426], [1.2784193510925688, 103.86193382266596], [1.31098, 103.85982], [1.29901, 103.85741], [1.3029948, 103.8387408], [1.3029948, 103.8387408], [1.28425, 103.83367], [1.2831600854127891, 103.86049814522266], [1.29788, 103.85511], [1.2782687587017836, 103.86198048105926], [1.29356, 103.84119], [1.29757, 103.85381], [1.28008, 103.84491], [1.31021, 103.89241], [1.278346046859261, 103.8619183054042], [1.31748, 103.84814], [1.3036245, 103.797154], [1.28215, 103.85703], [1.30862, 103.8386], [1.29643, 103.83796], [1.2783339659926565, 103.86197060272994], [1.32284, 103.85373], [1.28325, 103.85895], [1.28447, 103.85991], [1.27926, 103.78829], [1.28342, 103.86148], [1.2937, 103.82949], [1.28196, 103.85699], [1.299569, 103.8985672], [1.3029948, 103.8387408], [1.28177, 103.85929], [1.28281, 103.85896], [1.28131, 103.85879], [1.28322, 103.86103], [1.28157, 103.85751], [1.299569, 103.8985672], [1.28138, 103.85693], [1.31395, 103.88483], [1.28136, 103.85819], [1.28154, 103.85831], [1.28609, 103.8479], [1.28246, 103.78603], [1.30475, 103.7875], [1.31194, 103.85533], [1.2860833264785154, 103.83374397608408], [1.2735453, 103.8454928], [1.31289, 103.86006], [1.31291, 103.86024], [1.26608, 103.80932], [1.2916821, 103.8048268], [1.27681, 103.79096], [1.28338, 103.85732], [1.28139, 103.85706], [1.2752989, 103.8372683], [1.3128159982519232, 103.88638552673868], [1.30761, 103.90443], [1.3124327, 103.8790049], [1.3029948, 103.8387408], [1.27945, 103.78551], [1.28097, 103.78534], [1.28063, 103.78737], [1.304789, 103.837901], [1.2754081, 103.8445007], [1.33242, 103.85989], [1.27339, 103.84571], [1.3308061833301996, 103.76673717051744], [1.2846, 103.82988], [1.2980607739139478, 103.83760919030644], [1.32533, 103.84551], [1.29082, 103.83102], [1.2743458, 103.8461269], [1.3036245, 103.797154], [1.317, 103.76313], [1.28176, 103.85891], [1.28182, 103.85882], [1.28282, 103.85907], [1.2827, 103.85892], [1.28219, 103.85687], [1.30777, 103.83713], [1.303884, 103.9043973], [1.27944, 103.7873], [1.28097, 103.78532], [1.3199578118584017, 103.75225822489742], [1.282, 103.85198], [1.3161426, 103.9039618], [1.33291, 103.87987], [1.31969, 103.7524], [1.3440728, 103.7697939], [1.32296, 103.85308], [1.28161, 103.78535], [1.28167, 103.78602], [1.27963, 103.78599], [1.27953, 103.78527], [1.28144, 103.78722], [1.27951, 103.78728], [1.28113, 103.7853], [1.3223672, 103.7706472], [1.29441, 103.83847], [1.303779348046803, 103.90234738520184], [1.303512291903901, 103.90178239418634], [1.304915115788967, 103.90210670767712], [1.3027908617816524, 103.90365200112844], [1.32326, 103.85362], [1.32281, 103.85205], [1.303800800000004, 103.9029696576721], [1.3029153457363292, 103.9027030934479], [1.32165, 103.75439], [1.29457, 103.84003], [1.29024, 103.80644], [1.27217, 103.83339], [1.2928533, 103.8408957], [1.2962317, 103.8054381], [1.29543, 103.8384], [1.31689, 103.84377], [1.30344, 103.79931], [1.27462, 103.84192], [1.29642, 103.84034], [1.27338, 103.83251], [1.2965037908025747, 103.84024846847916], [1.29667, 103.83961], [1.2964406, 103.8553812], [1.2964406, 103.8553812], [1.2964406, 103.8553812], [1.29595, 103.85462], [1.2964406, 103.8553812], [1.2964406, 103.8553812], [1.2964406, 103.8553812], [1.29464, 103.83939], [1.27067, 103.79838], [1.30289, 103.78339], [1.29482, 103.83897], [1.29661, 103.8396], [1.295, 103.83991], [1.2925, 103.82279], [1.29474, 103.83983], [1.32405, 103.8498], [1.29133, 103.81897], [1.2819955, 103.8519832], [1.27027, 103.8026], [1.27011, 103.79766], [1.27004, 103.79683], [1.30198, 103.83183], [1.31027, 103.7603], [1.29585, 103.84183], [1.31241, 103.87773], [1.30605, 103.78933], [1.30454, 103.78924], [1.308752951745593, 103.83956135589224], [1.31314, 103.85371], [1.3081872, 103.8357101], [1.3081872, 103.8357101], [1.2821838675594976, 103.85886663344289], [1.2824499, 103.8578807], [1.2865837244173768, 103.8525069565353], [1.2810984049182104, 103.85983334816284], [1.297491, 103.8567369], [1.306238362679933, 103.83679091173562], [1.3061424055096478, 103.83530094067984], [1.2917434044155938, 103.76318216162238], [1.297491, 103.8567369], [1.297491, 103.8567369], [1.297491, 103.8567369], [1.280400439265354, 103.85961004136972], [1.284593464805145, 103.82959540652926], [1.2819955, 103.8519832], [1.3063406518870413, 103.78935866249138], [1.2943518104121372, 103.8383122202047], [1.2944934730606164, 103.83859392621622], [1.295870500243073, 103.84025324723308], [1.2950615037325632, 103.83793685212537], [1.2945455432908863, 103.83960598001084], [1.296323324778132, 103.83799739875263], [1.2967065222139542, 103.84007015665424], [1.2809188813724943, 103.8578570378574], [1.2795525, 103.8472939], [1.2806766307687587, 103.78517172896], [1.291022969791401, 103.81857390178276], [1.2754081, 103.8445007], [1.2754081, 103.8445007], [1.2944678951727118, 103.83844875424882], [1.2967497260977787, 103.83986844037268], [1.294372627945748, 103.83835629921975], [1.29665, 103.83962], [1.295783700880824, 103.83794601086936], [1.2963857428566992, 103.83805346373695], [1.305839301750856, 103.84120539777436], [1.3063971195349944, 103.8401006352541], [1.301798023388421, 103.83156914491316], [1.2808512, 103.8529161], [1.2771997, 103.8494008], [1.2962909381330614, 103.8401481457278], [1.27355, 103.84549], [1.3177386, 103.8286453], [1.2950221825587844, 103.83987758369356], [1.2963603515682736, 103.83868509131236], [1.2960832963643565, 103.84054100830356], [1.314429, 103.8025818], [1.3162628, 103.8925703], [1.2898749, 103.817528], [1.2795525, 103.8472939], [1.31558, 103.89264], [1.304758, 103.8373631], [1.2958559524043902, 103.84025498633508], [1.2953089476179085, 103.83797607964648], [1.2949408678093228, 103.83842228633092], [1.2945368378133395, 103.83965986588528], [1.3127962552471346, 103.90121206641196], [1.3217978417595777, 103.8342519225549], [1.2822367197473, 103.85972228963485], [1.3185070768399096, 103.7628457684744], [1.27655, 103.79213], [1.2966777206958635, 103.83975732158228], [1.275170102723966, 103.84450983256102], [1.2838458524339469, 103.86053036554593], [1.2827571656061918, 103.86027843896306], [1.282273019086142, 103.8584909055432], [1.3115168981323468, 103.87958742676938], [1.2819955, 103.8519832], [1.31342, 103.8565], [1.317725471499779, 103.76141706175063], [1.3177386, 103.8286453], [1.292239, 103.8231205], [1.2829985039054672, 103.8603347653514], [1.3175341495111728, 103.84876671624976], [1.2820665432751754, 103.85942387175756], [1.2827450986906306, 103.86013225857424], [1.325105176629394, 103.850167176385], [1.318847, 103.9032298], [1.31328, 103.84581], [1.303539494097414, 103.86139825580094], [1.3194372444500622, 103.84699714464948], [1.3132577562532082, 103.84767039022935], [1.2766886697264848, 103.84953798408078], [1.31279, 103.87928], [1.32557609785965, 103.85117228557446], [1.32361, 103.85045], [1.296406711176041, 103.84022386365424], [1.2834709370882953, 103.83139164309834], [1.29148, 103.77247], [1.3039793, 103.8293699], [1.2754081, 103.8445007], [1.2834203298518545, 103.8581191450996], [1.3158371691308175, 103.82831133308105], [1.28899, 103.8319], [1.3085769, 103.8383598], [1.2837688267107676, 103.85095071613272], [1.3108834756983463, 103.762221001388], [1.2898749, 103.817528], [1.27541, 103.8445], [1.3019804, 103.8989476], [1.3085508389402287, 103.83534014614526], [1.2946557636927651, 103.84058596594043], [1.2948325435120345, 103.83862368649598], [1.2916366309707967, 103.83925599062232], [1.310327170384841, 103.878009762738], [1.3169769781264389, 103.82640671313176], [1.31697, 103.82829], [1.31679644594891, 103.82611270492224], [1.316989294330121, 103.82652823192718], [1.3166442338864544, 103.82619548890398], [1.3155859902891285, 103.82778966218562], [1.289286747687621, 103.83054938537006], [1.3178843343030573, 103.8487269303482], [1.2800171315213298, 103.78964366820507], [1.2808037319353351, 103.78748095566368], [1.2795216665353744, 103.78931284559228], [1.2792113786233197, 103.78946851373694], [1.28116, 103.78742], [1.2947219111975097, 103.84017736530862], [1.304899852998004, 103.9022486852216], [1.303268155002215, 103.9040115243413], [1.3029160932228128, 103.90381528052004], [1.3043096036083193, 103.90394348076936], [1.3045576233479546, 103.90189569121206], [1.3124878178557202, 103.8878228830675], [1.3028348207827436, 103.90316145636872], [1.30477175876996, 103.90207612966688], [1.3042111579697249, 103.90213662046092], [1.283787410280369, 103.83323928143926], [1.3043798318972335, 103.9022290646871], [1.30275353672396, 103.90221012443531], [1.3217956387332714, 103.75399097117142], [1.3177054977257647, 103.75498911129674], [1.2969074558505231, 103.84047568743637], [1.3035578337063434, 103.9040089827052], [1.3375185241116403, 103.86812651552653], [1.3054401871112444, 103.89372951617122], [1.312378656312359, 103.88663621793997], [1.27958, 103.85066], [1.304226598812474, 103.89460837467644], [1.2735453, 103.8454928], [1.3087976607349312, 103.83667329110057], [1.2928960075774432, 103.8370710480808], [1.309170346226212, 103.83629783075928], [1.3089818521719585, 103.82638578274924], [1.2964197177596992, 103.8386418175891], [1.308240508577794, 103.86154842973296], [1.2967611870337608, 103.84030668125354], [1.29442, 103.83792], [1.2931951, 103.8217993], [1.3375674692269317, 103.87097195841692], [1.2773465, 103.8536086], [1.282621434299301, 103.86014208197594], [1.2990282983336547, 103.83448572851051], [1.3267601395598252, 103.81121965262648], [1.3146872199439958, 103.85448492467748], [1.3158335, 103.8420506], [1.3299736, 103.7969967], [1.3299736, 103.7969967], [1.2735453, 103.8454928], [1.2914898, 103.8063676], [1.3126417588356665, 103.87820107026478], [1.2887435139625916, 103.83174216275182], [1.3147731837026022, 103.837229914181], [1.318970489602758, 103.77304713141471], [1.2903764157942452, 103.76551703909274], [1.31233, 103.88689], [1.3048031281984127, 103.83798835378845], [1.3242832656772208, 103.8457350658634], [1.2764779658915522, 103.84741500561664], [1.2795525, 103.8472939], [1.2842096, 103.8297195], [1.2842096, 103.8297195], [1.2963034769559008, 103.83838249522184], [1.2966339639778917, 103.84076764492764], [1.2966611482713837, 103.83987605698952], [1.3246438565007626, 103.85363325494632], [1.292061702746787, 103.80732589623722], [1.2842314, 103.8298227], [1.2948763893438109, 103.83836711181996], [1.3201592192295843, 103.75437488731306], [1.3193384468289375, 103.77634742817212], [1.3200090969280205, 103.86382565957402], [1.3250729, 103.8491117], [1.3215721850428694, 103.7526717161616], [1.3197018194429213, 103.75243348882668], [1.2947697381195649, 103.83808702405452], [1.2825497, 103.8599419], [1.3030168427837503, 103.82704928962382], [1.34095966477327, 103.882637717602], [1.3186464666844695, 103.7525180344268], [1.2944240731157652, 103.83882152697852], [1.2946914969003764, 103.84018194854865], [1.2948659833400065, 103.8383077583836], [1.2944805344975174, 103.83801855144976], [1.2949104691651412, 103.83844166377114], [1.2951522212123454, 103.84003151445737], [1.31716, 103.75485], [1.319730252827774, 103.75238395371328], [1.319617329261935, 103.75410056413216], [1.29731877799963, 103.7661444461035], [1.3192887370861022, 103.75445872138106], [1.3051013571060586, 103.78399088642408], [1.3156691187669365, 103.75728750335122], [1.3168119880015252, 103.7533935190184], [1.3299736, 103.7969967], [1.28335, 103.85833], [1.3393836942625323, 103.868619028311], [1.2949305604214036, 103.83881959765442], [1.29468886355739, 103.83904197756016], [1.2963695591289586, 103.8382412533994], [1.2962116584294707, 103.8397774168046], [1.29491, 103.84], [1.29444, 103.83965], [1.2944382573783757, 103.8395379128062], [1.295923085725848, 103.84020723977964], [1.314822972789678, 103.85237186114176], [1.314890636195457, 103.85324585438624], [1.2930673303406717, 103.82933632498865], [1.3104332049199017, 103.86271302841293], [1.309799359475769, 103.8611316217272], [1.3, 103.82554], [1.324267544965658, 103.84565798318236], [1.2908468155728945, 103.84883415639352], [1.29114, 103.85021], [1.2929279168553385, 103.84994159507188], [1.292635659356253, 103.8504375723672], [1.2917382, 103.8494682], [1.2909101535201657, 103.8498969586044], [1.283021691137581, 103.86071027130563], [1.3017978798963017, 103.82870723984726], [1.2891912439126394, 103.83237325060568], [1.2962873122819352, 103.83996247400331], [1.2966876247202632, 103.84008636620824], [1.29457, 103.83958], [1.29468, 103.83793], [1.2964566245467843, 103.84027702974346], [1.2948056461052242, 103.84023373166892], [1.283295925463774, 103.8586604507016], [1.28918, 103.83199], [1.29602638107029, 103.8380103426138], [1.267729520704974, 103.81370691363183], [1.3002371901558047, 103.86002316542547], [1.3125725032214464, 103.8793186412168], [1.2966843717051642, 103.83891593877686], [1.3134, 103.85461], [1.2945757949141852, 103.83955721188866], [1.2945914609734108, 103.83988758206029], [1.294784141772437, 103.83826138015196], [1.294851588181262, 103.83985387533002], [1.2944586828684883, 103.83859572103134], [1.296587535784871, 103.83850230161588], [1.2966485949776538, 103.83793523077848], [1.2960642871298371, 103.84030144403322], [1.2965813295303934, 103.83808194146587], [1.2963624466440644, 103.83951763927531], [1.296441189428549, 103.83791686057155], [1.2961453462993648, 103.83795992122216], [1.2959392293188616, 103.83816964934913], [1.2954474482487464, 103.83034799452216], [1.2842462981407698, 103.83124827790724], [1.3087689, 103.8389955], [1.2938434538022794, 103.76330564521042], [1.2972082894003274, 103.84135571444378], [1.2820998751736026, 103.8585401326418], [1.3017122, 103.7900669], [1.3248260797728917, 103.8534824139495], [1.2964627411025715, 103.83727194990465], [1.297146, 103.8353209], [1.2755865505523487, 103.84360151987356], [1.303609, 103.896534], [1.2818424677055735, 103.83151842841372], [1.325, 103.88106], [1.2929812779231933, 103.82877166137698], [1.2946947, 103.766301], [1.29572, 103.76572], [1.3007093, 103.8915107], [1.3007093, 103.8915107], [1.2812969792115885, 103.85869268201292], [1.3007093, 103.8915107], [1.303609, 103.896534], [1.303609, 103.896534], [1.303609, 103.896534], [1.303609, 103.896534], [1.303609, 103.896534], [1.28322, 103.82963], [1.2832836795420983, 103.83115364746132], [1.3226276825900354, 103.86314939351728], [1.2795525, 103.8472939], [1.2795525, 103.8472939], [1.2754081, 103.8445007], [1.2795525, 103.8472939], [1.30735, 103.88974], [1.31208, 103.87923], [1.2951619161920025, 103.8387409473102], [1.29498843092448, 103.84051946220796], [1.2949, 103.83876], [1.322839559272603, 103.85187716900404], [1.2819672692599458, 103.78513309795802], [1.3053527221077663, 103.76797534525394], [1.3125826562667968, 103.87862568890846], [1.3036134, 103.8411883], [1.2817, 103.85879], [1.3226, 103.77035], [1.32055, 103.78991], [1.3094447075250983, 103.7850321829319], [1.28274, 103.85908], [1.28157, 103.85726], [1.33211, 103.84499], [1.2797468, 103.8552279], [1.282614207468526, 103.8616899731172], [1.2830849738139656, 103.8607805855802], [1.294782951422714, 103.83986250208308], [1.296513579663349, 103.83850218329188], [1.294410319371654, 103.83842188536724], [1.2947661146551557, 103.83854929641898], [1.2958643145776996, 103.83811110424584], [1.2945442634333009, 103.83956938064262], [1.296371660119782, 103.8382260877878], [1.2958054005872826, 103.84029352242464], [1.2960700269972645, 103.84021811145784], [1.29625, 103.83988], [1.29339, 103.84124], [1.26995, 103.7981], [1.296417455965526, 103.8389997950159], [1.2962484018624398, 103.83841804478854], [1.2822705623356638, 103.80507075037872], [1.2765739, 103.853218], [1.30973, 103.83535], [1.2939771564334233, 103.82656306281096], [1.2824485504139391, 103.8313212376349], [1.312267328486875, 103.8848626613617], [1.2929092800889386, 103.7633602018774], [1.2900089, 103.8494332], [1.30779, 103.79861], [1.3091642, 103.7974802], [1.29485, 103.84019], [1.3032255498203764, 103.90053545465103], [1.29529, 103.83806], [1.33777, 103.87106], [1.2838237178875052, 103.82897810013284], [1.3044863, 103.9019834], [1.29995, 103.89061], [1.2843410577283405, 103.82962680331003], [1.2949484, 103.8389886], [1.325617531446574, 103.8525481879349], [1.34116761009686, 103.88018877974564], [1.29642, 103.83831], [1.29828, 103.8578], [1.2898749, 103.817528], [1.2948712338993236, 103.83930453784404], [1.2892, 103.83071], [1.323402734687344, 103.84990861734464], [1.30019, 103.80217], [1.3096207366337604, 103.761023532293], [1.3018866, 103.9000475], [1.297491, 103.8567369], [1.297491, 103.8567369], [1.3061, 103.78725], [1.2934826413410898, 103.83819121867418], [1.2795839, 103.8506561], [1.2906662160309252, 103.8322563467078], [1.2968506982977095, 103.82982948539752], [1.31091, 103.87949], [1.292340608358375, 103.83723355028616], [1.303161612912083, 103.9005338112136], [1.3000015, 103.82554]],\n",
              "                {&quot;blur&quot;: 20, &quot;maxZoom&quot;: 18, &quot;minOpacity&quot;: 0.5, &quot;radius&quot;: 15}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var marker_cluster_8a7fa5895c0916c7d15b299f163b860a = L.markerClusterGroup(\n",
              "                {}\n",
              "            );\n",
              "            map_fc0956a539f9818a94428b66e7dda063.addLayer(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "            var marker_a2c20e70c2a72b52e42123a2ee077af3 = L.marker(\n",
              "                [1.2837356, 103.8200999],\n",
              "                {}\n",
              "            ).addTo(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "        var popup_f1563b2aea122151b1ab2a9dae108634 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_70dd8efb0a62e170ce36f83ca6fcddb1 = $(`&lt;div id=&quot;html_70dd8efb0a62e170ce36f83ca6fcddb1&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Bukit Merah&lt;/div&gt;`)[0];\n",
              "                popup_f1563b2aea122151b1ab2a9dae108634.setContent(html_70dd8efb0a62e170ce36f83ca6fcddb1);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_a2c20e70c2a72b52e42123a2ee077af3.bindPopup(popup_f1563b2aea122151b1ab2a9dae108634)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_26217f3bb5aaa831f16da636d77cd43b = L.marker(\n",
              "                [1.31318325, 103.83804024301281],\n",
              "                {}\n",
              "            ).addTo(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "        var popup_c28c314c7f4fc018be9b4e14d27e0c39 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_ef0eaa960ae029ec02babe3c25e81794 = $(`&lt;div id=&quot;html_ef0eaa960ae029ec02babe3c25e81794&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Newton&lt;/div&gt;`)[0];\n",
              "                popup_c28c314c7f4fc018be9b4e14d27e0c39.setContent(html_ef0eaa960ae029ec02babe3c25e81794);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_26217f3bb5aaa831f16da636d77cd43b.bindPopup(popup_c28c314c7f4fc018be9b4e14d27e0c39)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_93e8f0f3b0c8005f4d501cb9aebbc102 = L.marker(\n",
              "                [1.2976832, 103.834188],\n",
              "                {}\n",
              "            ).addTo(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "        var popup_d7c9abea1a2dda76ee2e08f0d9fcaa3f = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_d200ef6f357d5af7faf8d95dc3d6119b = $(`&lt;div id=&quot;html_d200ef6f357d5af7faf8d95dc3d6119b&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;River Valley&lt;/div&gt;`)[0];\n",
              "                popup_d7c9abea1a2dda76ee2e08f0d9fcaa3f.setContent(html_d200ef6f357d5af7faf8d95dc3d6119b);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_93e8f0f3b0c8005f4d501cb9aebbc102.bindPopup(popup_d7c9abea1a2dda76ee2e08f0d9fcaa3f)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_2955177b19978527444ff90d0295d09a = L.marker(\n",
              "                [1.310759, 103.866262],\n",
              "                {}\n",
              "            ).addTo(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "        var popup_977474c8d121eadafb8aaacf90b5fb32 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_8f779329f2efe6e027f29ce936fcd403 = $(`&lt;div id=&quot;html_8f779329f2efe6e027f29ce936fcd403&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Kallang&lt;/div&gt;`)[0];\n",
              "                popup_977474c8d121eadafb8aaacf90b5fb32.setContent(html_8f779329f2efe6e027f29ce936fcd403);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_2955177b19978527444ff90d0295d09a.bindPopup(popup_977474c8d121eadafb8aaacf90b5fb32)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_858a8df544219d6e985fe74246be718c = L.marker(\n",
              "                [1.3546901, 103.7763724],\n",
              "                {}\n",
              "            ).addTo(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "        var popup_1d8ee99b91e5576d9762f0318aaced48 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_9749783e0a02664797816a8049c1b3a9 = $(`&lt;div id=&quot;html_9749783e0a02664797816a8049c1b3a9&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Bukit Timah&lt;/div&gt;`)[0];\n",
              "                popup_1d8ee99b91e5576d9762f0318aaced48.setContent(html_9749783e0a02664797816a8049c1b3a9);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_858a8df544219d6e985fe74246be718c.bindPopup(popup_1d8ee99b91e5576d9762f0318aaced48)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_090247b70b22d8f1221533c7249cf054 = L.marker(\n",
              "                [1.2862423, 103.8537756],\n",
              "                {}\n",
              "            ).addTo(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "        var popup_a9f44468a505f4896e55c94789fc8ccd = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_60729c94d29b792341b3e62682ea2bfb = $(`&lt;div id=&quot;html_60729c94d29b792341b3e62682ea2bfb&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Downtown Core&lt;/div&gt;`)[0];\n",
              "                popup_a9f44468a505f4896e55c94789fc8ccd.setContent(html_60729c94d29b792341b3e62682ea2bfb);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_090247b70b22d8f1221533c7249cf054.bindPopup(popup_a9f44468a505f4896e55c94789fc8ccd)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_4990403917c9c0af1b1ba40778bceda2 = L.marker(\n",
              "                [1.3026889, 103.9073952],\n",
              "                {}\n",
              "            ).addTo(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "        var popup_e054223be11b50529e9f868cf4b8e295 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_4f0222abf7a59639b532ee02ffa8bed5 = $(`&lt;div id=&quot;html_4f0222abf7a59639b532ee02ffa8bed5&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Marine Parade&lt;/div&gt;`)[0];\n",
              "                popup_e054223be11b50529e9f868cf4b8e295.setContent(html_4f0222abf7a59639b532ee02ffa8bed5);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_4990403917c9c0af1b1ba40778bceda2.bindPopup(popup_e054223be11b50529e9f868cf4b8e295)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_daabb72bf6f9c3e5e1041ac0e2113ce7 = L.marker(\n",
              "                [1.3205257000000001, 103.84388133927948],\n",
              "                {}\n",
              "            ).addTo(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "        var popup_a18905adcfaff44d1df2ade27f89c556 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_694b32100d3aa5e17f53504796e7e3ec = $(`&lt;div id=&quot;html_694b32100d3aa5e17f53504796e7e3ec&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Novena&lt;/div&gt;`)[0];\n",
              "                popup_a18905adcfaff44d1df2ade27f89c556.setContent(html_694b32100d3aa5e17f53504796e7e3ec);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_daabb72bf6f9c3e5e1041ac0e2113ce7.bindPopup(popup_a18905adcfaff44d1df2ade27f89c556)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_4275c153a12dbac6df4c74b609357d7f = L.marker(\n",
              "                [1.2946226, 103.8060366],\n",
              "                {}\n",
              "            ).addTo(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "        var popup_c94432a264f0744b90a1cb494fa96f23 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_7adaa86b99cf695bb797ea41be9cf553 = $(`&lt;div id=&quot;html_7adaa86b99cf695bb797ea41be9cf553&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Queenstown&lt;/div&gt;`)[0];\n",
              "                popup_c94432a264f0744b90a1cb494fa96f23.setContent(html_7adaa86b99cf695bb797ea41be9cf553);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_4275c153a12dbac6df4c74b609357d7f.bindPopup(popup_c94432a264f0744b90a1cb494fa96f23)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_5d4b51c20f8a6fe5d1ed039cfab24526 = L.marker(\n",
              "                [1.3060443, 103.8152804],\n",
              "                {}\n",
              "            ).addTo(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "        var popup_fbd657d23435b563aa3d94042cc73018 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_0bb765ab73d986f456421f8caa64bcb1 = $(`&lt;div id=&quot;html_0bb765ab73d986f456421f8caa64bcb1&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Tanglin&lt;/div&gt;`)[0];\n",
              "                popup_fbd657d23435b563aa3d94042cc73018.setContent(html_0bb765ab73d986f456421f8caa64bcb1);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_5d4b51c20f8a6fe5d1ed039cfab24526.bindPopup(popup_fbd657d23435b563aa3d94042cc73018)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_ea2db47b6db65c17d4009fe1e42b0c24 = L.marker(\n",
              "                [1.3181862, 103.8870563],\n",
              "                {}\n",
              "            ).addTo(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "        var popup_e6ae077bfa51b95a73a019f648d91988 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_facdac3985dc07c2aff17b4a71ba90b9 = $(`&lt;div id=&quot;html_facdac3985dc07c2aff17b4a71ba90b9&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Geylang&lt;/div&gt;`)[0];\n",
              "                popup_e6ae077bfa51b95a73a019f648d91988.setContent(html_facdac3985dc07c2aff17b4a71ba90b9);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_ea2db47b6db65c17d4009fe1e42b0c24.bindPopup(popup_e6ae077bfa51b95a73a019f648d91988)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_6381b2ce7d4dbbbfa3622e238d5406d4 = L.marker(\n",
              "                [1.3353906, 103.8497414],\n",
              "                {}\n",
              "            ).addTo(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "        var popup_cfeef410ecbb511091325e25b36daf25 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_21588f7dca764b586f175bac65f26c03 = $(`&lt;div id=&quot;html_21588f7dca764b586f175bac65f26c03&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Toa Payoh&lt;/div&gt;`)[0];\n",
              "                popup_cfeef410ecbb511091325e25b36daf25.setContent(html_21588f7dca764b586f175bac65f26c03);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_6381b2ce7d4dbbbfa3622e238d5406d4.bindPopup(popup_cfeef410ecbb511091325e25b36daf25)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_b020caacd3dd0dcf60118cde9a7e75ce = L.marker(\n",
              "                [1.3168251, 103.76604037254504],\n",
              "                {}\n",
              "            ).addTo(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "        var popup_cf5dde497c04d3f98fed0e7afbbd6a16 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_91ebb699dbe5f8858753c6c198f37c2c = $(`&lt;div id=&quot;html_91ebb699dbe5f8858753c6c198f37c2c&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Clementi&lt;/div&gt;`)[0];\n",
              "                popup_cf5dde497c04d3f98fed0e7afbbd6a16.setContent(html_91ebb699dbe5f8858753c6c198f37c2c);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_b020caacd3dd0dcf60118cde9a7e75ce.bindPopup(popup_cf5dde497c04d3f98fed0e7afbbd6a16)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_30fb0192949b1417cf744dd89d12d4fd = L.marker(\n",
              "                [1.27418625, 103.86332013368138],\n",
              "                {}\n",
              "            ).addTo(marker_cluster_8a7fa5895c0916c7d15b299f163b860a);\n",
              "        \n",
              "    \n",
              "        var popup_67d6a38f2a48b3723d351bd7d045a4f4 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_e34d54f795eeb45e07b01313d00be852 = $(`&lt;div id=&quot;html_e34d54f795eeb45e07b01313d00be852&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Marina South&lt;/div&gt;`)[0];\n",
              "                popup_67d6a38f2a48b3723d351bd7d045a4f4.setContent(html_e34d54f795eeb45e07b01313d00be852);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_30fb0192949b1417cf744dd89d12d4fd.bindPopup(popup_67d6a38f2a48b3723d351bd7d045a4f4)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_29c01b13896870462a6f282c9dee5bb2 = L.marker(\n",
              "                [1.2791404499999999, 103.86792771351024],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_1aaf006ea80cac618e1cfce63d29b19f = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_29c01b13896870462a6f282c9dee5bb2.setIcon(icon_1aaf006ea80cac618e1cfce63d29b19f);\n",
              "        \n",
              "    \n",
              "        var popup_2a2047e7d97c64799349281019651a06 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_21905094374aad677a8b8f99962f0cfc = $(`&lt;div id=&quot;html_21905094374aad677a8b8f99962f0cfc&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Gardens by the Bay&lt;/div&gt;`)[0];\n",
              "                popup_2a2047e7d97c64799349281019651a06.setContent(html_21905094374aad677a8b8f99962f0cfc);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_29c01b13896870462a6f282c9dee5bb2.bindPopup(popup_2a2047e7d97c64799349281019651a06)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_098a7795ab20b9c087e3e5c35ff93284 = L.marker(\n",
              "                [1.2836965, 103.8607226],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_c8f8a009af9e77f842a2de9cdba0b696 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_098a7795ab20b9c087e3e5c35ff93284.setIcon(icon_c8f8a009af9e77f842a2de9cdba0b696);\n",
              "        \n",
              "    \n",
              "        var popup_478174f30798e3433846c020ad8ff1c7 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_698aff266602c4eb9bc9cccb9424d076 = $(`&lt;div id=&quot;html_698aff266602c4eb9bc9cccb9424d076&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Marina Bay Sands&lt;/div&gt;`)[0];\n",
              "                popup_478174f30798e3433846c020ad8ff1c7.setContent(html_698aff266602c4eb9bc9cccb9424d076);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_098a7795ab20b9c087e3e5c35ff93284.bindPopup(popup_478174f30798e3433846c020ad8ff1c7)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_e53c0fc4f4a57f172c961fdc556958bc = L.marker(\n",
              "                [1.24894585, 103.83430564159272],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_da7b82651df280b6207ff4367a9159ef = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_e53c0fc4f4a57f172c961fdc556958bc.setIcon(icon_da7b82651df280b6207ff4367a9159ef);\n",
              "        \n",
              "    \n",
              "        var popup_cff81e7291b1a5c764d807c636a4bf2b = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_d255178b0d19c4c14bc77fe108386ad3 = $(`&lt;div id=&quot;html_d255178b0d19c4c14bc77fe108386ad3&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Sentosa Island&lt;/div&gt;`)[0];\n",
              "                popup_cff81e7291b1a5c764d807c636a4bf2b.setContent(html_d255178b0d19c4c14bc77fe108386ad3);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_e53c0fc4f4a57f172c961fdc556958bc.bindPopup(popup_cff81e7291b1a5c764d807c636a4bf2b)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_0331637a02433d8bd7f0f98e69e9a5e6 = L.marker(\n",
              "                [1.25420095, 103.82266700104616],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_91cca35fbc15753187ca6d4cfe3c6b98 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_0331637a02433d8bd7f0f98e69e9a5e6.setIcon(icon_91cca35fbc15753187ca6d4cfe3c6b98);\n",
              "        \n",
              "    \n",
              "        var popup_1528b4e4e167426c751ab86d3218b16e = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_aa2e2d45991929ebe72b63b42bc9508c = $(`&lt;div id=&quot;html_aa2e2d45991929ebe72b63b42bc9508c&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Universal Studios Singapore&lt;/div&gt;`)[0];\n",
              "                popup_1528b4e4e167426c751ab86d3218b16e.setContent(html_aa2e2d45991929ebe72b63b42bc9508c);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_0331637a02433d8bd7f0f98e69e9a5e6.bindPopup(popup_1528b4e4e167426c751ab86d3218b16e)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_8f55bddc9e2aac4a7d64291d3c8f5bcf = L.marker(\n",
              "                [1.3007482, 103.8405995],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_dfb5c1f742a207b9d6c3e1fb79c70b22 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_8f55bddc9e2aac4a7d64291d3c8f5bcf.setIcon(icon_dfb5c1f742a207b9d6c3e1fb79c70b22);\n",
              "        \n",
              "    \n",
              "        var popup_6602915deb85dd89865fa70172df9d22 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_8920ad104d19b6279f0ba5e4d8afb0d6 = $(`&lt;div id=&quot;html_8920ad104d19b6279f0ba5e4d8afb0d6&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Orchard Road&lt;/div&gt;`)[0];\n",
              "                popup_6602915deb85dd89865fa70172df9d22.setContent(html_8920ad104d19b6279f0ba5e4d8afb0d6);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_8f55bddc9e2aac4a7d64291d3c8f5bcf.bindPopup(popup_6602915deb85dd89865fa70172df9d22)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_92b53b0e9d0c713291a7b9ab6144580e = L.marker(\n",
              "                [1.2894104, 103.86312530000001],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_5745d90523dbd123684f51cb4a1920e7 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_92b53b0e9d0c713291a7b9ab6144580e.setIcon(icon_5745d90523dbd123684f51cb4a1920e7);\n",
              "        \n",
              "    \n",
              "        var popup_bbe741cab9cc31f4c8130b9c6d2b8456 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_799900e2be7b412c54bf94228f84dfbe = $(`&lt;div id=&quot;html_799900e2be7b412c54bf94228f84dfbe&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Singapore Flyer&lt;/div&gt;`)[0];\n",
              "                popup_bbe741cab9cc31f4c8130b9c6d2b8456.setContent(html_799900e2be7b412c54bf94228f84dfbe);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_92b53b0e9d0c713291a7b9ab6144580e.bindPopup(popup_bbe741cab9cc31f4c8130b9c6d2b8456)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_ab089e7a10729843c0a79243e20894be = L.marker(\n",
              "                [1.4037076, 103.79403742902613],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_2820ef90835fb5c9d90907b8e72b40c1 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_ab089e7a10729843c0a79243e20894be.setIcon(icon_2820ef90835fb5c9d90907b8e72b40c1);\n",
              "        \n",
              "    \n",
              "        var popup_b31fa45aed6997018459e2bb6b370165 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_19446c3f49f565bfb56472909b956ec4 = $(`&lt;div id=&quot;html_19446c3f49f565bfb56472909b956ec4&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Singapore Zoo&lt;/div&gt;`)[0];\n",
              "                popup_b31fa45aed6997018459e2bb6b370165.setContent(html_19446c3f49f565bfb56472909b956ec4);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_ab089e7a10729843c0a79243e20894be.bindPopup(popup_b31fa45aed6997018459e2bb6b370165)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_862f245b029f60ec4acf51abea6ddb03 = L.marker(\n",
              "                [1.4022451500000002, 103.78894855855035],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_05fdac0f403986ce9e761b621aab28f7 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_862f245b029f60ec4acf51abea6ddb03.setIcon(icon_05fdac0f403986ce9e761b621aab28f7);\n",
              "        \n",
              "    \n",
              "        var popup_1fc48381a028e02a7b70aca50d19c556 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_fd73d9273b014c4b03c9f502f530e6e4 = $(`&lt;div id=&quot;html_fd73d9273b014c4b03c9f502f530e6e4&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Night Safari&lt;/div&gt;`)[0];\n",
              "                popup_1fc48381a028e02a7b70aca50d19c556.setContent(html_fd73d9273b014c4b03c9f502f530e6e4);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_862f245b029f60ec4acf51abea6ddb03.bindPopup(popup_1fc48381a028e02a7b70aca50d19c556)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_ff39dac1082a4ba1460946763e03fad6 = L.marker(\n",
              "                [1.3207711, 103.70799105461109],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_d6a39ff08a705b7d6cf247e56484a456 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_ff39dac1082a4ba1460946763e03fad6.setIcon(icon_d6a39ff08a705b7d6cf247e56484a456);\n",
              "        \n",
              "    \n",
              "        var popup_929f69808fc7fd6e9318ad3de8c07df2 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_71abfdc60220a38fcaf85c7e896855b6 = $(`&lt;div id=&quot;html_71abfdc60220a38fcaf85c7e896855b6&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Jurong Bird Park&lt;/div&gt;`)[0];\n",
              "                popup_929f69808fc7fd6e9318ad3de8c07df2.setContent(html_71abfdc60220a38fcaf85c7e896855b6);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_ff39dac1082a4ba1460946763e03fad6.bindPopup(popup_929f69808fc7fd6e9318ad3de8c07df2)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_98ca8ad8778d53ecfd125b35a6ecd352 = L.marker(\n",
              "                [1.2584463, 103.8203488],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_50e7628a0ff65285bd7f8831b93597b7 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_98ca8ad8778d53ecfd125b35a6ecd352.setIcon(icon_50e7628a0ff65285bd7f8831b93597b7);\n",
              "        \n",
              "    \n",
              "        var popup_7b90658c904b7cf89a22ebdb4aad5587 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_4f662563a6bb46cfc2602e660c959070 = $(`&lt;div id=&quot;html_4f662563a6bb46cfc2602e660c959070&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;S.E.A. Aquarium&lt;/div&gt;`)[0];\n",
              "                popup_7b90658c904b7cf89a22ebdb4aad5587.setContent(html_4f662563a6bb46cfc2602e660c959070);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_98ca8ad8778d53ecfd125b35a6ecd352.bindPopup(popup_7b90658c904b7cf89a22ebdb4aad5587)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_4fa5a6b8fd608ba391be28df4df8f571 = L.marker(\n",
              "                [1.4020188500000001, 103.7916047754835],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_b5bf86fb7bd8136d5e2633dabb478c34 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_4fa5a6b8fd608ba391be28df4df8f571.setIcon(icon_b5bf86fb7bd8136d5e2633dabb478c34);\n",
              "        \n",
              "    \n",
              "        var popup_22300abebee4a4679b501d8e3cfaac16 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_75fdd364f60126274a92d92500675a25 = $(`&lt;div id=&quot;html_75fdd364f60126274a92d92500675a25&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;River Wonders&lt;/div&gt;`)[0];\n",
              "                popup_22300abebee4a4679b501d8e3cfaac16.setContent(html_75fdd364f60126274a92d92500675a25);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_4fa5a6b8fd608ba391be28df4df8f571.bindPopup(popup_22300abebee4a4679b501d8e3cfaac16)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_6fa088a620b479a68601ff9d9b79adce = L.marker(\n",
              "                [1.2512811, 103.8170551],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_b2f17e5786d2f4475c50a99a899c8ae4 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_6fa088a620b479a68601ff9d9b79adce.setIcon(icon_b2f17e5786d2f4475c50a99a899c8ae4);\n",
              "        \n",
              "    \n",
              "        var popup_1a2cabc61218a54b80bc8b55a88262aa = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_9cc1d202a9c02bde48f1f7752a0c4374 = $(`&lt;div id=&quot;html_9cc1d202a9c02bde48f1f7752a0c4374&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Wings of Time&lt;/div&gt;`)[0];\n",
              "                popup_1a2cabc61218a54b80bc8b55a88262aa.setContent(html_9cc1d202a9c02bde48f1f7752a0c4374);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_6fa088a620b479a68601ff9d9b79adce.bindPopup(popup_1a2cabc61218a54b80bc8b55a88262aa)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_196c55a6ef11fc26b21a8251eed05aac = L.marker(\n",
              "                [1.28917835, 103.84515431766008],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_97495f452fc050bd0de98fced54cb883 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_196c55a6ef11fc26b21a8251eed05aac.setIcon(icon_97495f452fc050bd0de98fced54cb883);\n",
              "        \n",
              "    \n",
              "        var popup_2c99b08239d562298810f94cbc3a6ea7 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_bd3935645efdb48e589abe82ec1390d9 = $(`&lt;div id=&quot;html_bd3935645efdb48e589abe82ec1390d9&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Singapore River&lt;/div&gt;`)[0];\n",
              "                popup_2c99b08239d562298810f94cbc3a6ea7.setContent(html_bd3935645efdb48e589abe82ec1390d9);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_196c55a6ef11fc26b21a8251eed05aac.bindPopup(popup_2c99b08239d562298810f94cbc3a6ea7)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_8f39a7fbad06db76fd3c708363dbb3e5 = L.marker(\n",
              "                [1.294249, 103.8569096],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_52bf6e5e45e053c2dc9f3be103de2f03 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_8f39a7fbad06db76fd3c708363dbb3e5.setIcon(icon_52bf6e5e45e053c2dc9f3be103de2f03);\n",
              "        \n",
              "    \n",
              "        var popup_f53647b38fd6ab7ee2e50f7ccb92d4f6 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_3bb79df436cfc79734a230e123080c28 = $(`&lt;div id=&quot;html_3bb79df436cfc79734a230e123080c28&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Singapore DUCKtours&lt;/div&gt;`)[0];\n",
              "                popup_f53647b38fd6ab7ee2e50f7ccb92d4f6.setContent(html_3bb79df436cfc79734a230e123080c28);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_8f39a7fbad06db76fd3c708363dbb3e5.bindPopup(popup_f53647b38fd6ab7ee2e50f7ccb92d4f6)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_844ded4c7a35578ad7b131016f75d8e3 = L.marker(\n",
              "                [1.28568515, 103.85415922903803],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_79080843c73a05068333c21416ef1063 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_844ded4c7a35578ad7b131016f75d8e3.setIcon(icon_79080843c73a05068333c21416ef1063);\n",
              "        \n",
              "    \n",
              "        var popup_6865efa1b999a868f755aac494d75a60 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_67d33ece27283ab4a2d47d76bdcd4a94 = $(`&lt;div id=&quot;html_67d33ece27283ab4a2d47d76bdcd4a94&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Merlion Park&lt;/div&gt;`)[0];\n",
              "                popup_6865efa1b999a868f755aac494d75a60.setContent(html_67d33ece27283ab4a2d47d76bdcd4a94);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_844ded4c7a35578ad7b131016f75d8e3.bindPopup(popup_6865efa1b999a868f755aac494d75a60)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_8f34262cf21dbf16e0dd26da2237b32f = L.marker(\n",
              "                [1.2965476, 103.84831668321195],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_e8681a1a08857d9bddde4e6eb6cc57fb = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_8f34262cf21dbf16e0dd26da2237b32f.setIcon(icon_e8681a1a08857d9bddde4e6eb6cc57fb);\n",
              "        \n",
              "    \n",
              "        var popup_4eec43c9081c915e7a9e432214e8b06c = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_a9365da6e8051c9ba81fcc969c12cd17 = $(`&lt;div id=&quot;html_a9365da6e8051c9ba81fcc969c12cd17&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;National Museum of Singapore&lt;/div&gt;`)[0];\n",
              "                popup_4eec43c9081c915e7a9e432214e8b06c.setContent(html_a9365da6e8051c9ba81fcc969c12cd17);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_8f34262cf21dbf16e0dd26da2237b32f.bindPopup(popup_4eec43c9081c915e7a9e432214e8b06c)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_c09126e38be42987a842e70e0601207e = L.marker(\n",
              "                [1.25808635, 103.8177226832006],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_e6c010e3babead05c17d762357f0afb9 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_c09126e38be42987a842e70e0601207e.setIcon(icon_e6c010e3babead05c17d762357f0afb9);\n",
              "        \n",
              "    \n",
              "        var popup_4b244012ceb04abbaa5bcb919713a01f = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_257b56474faff33d723af52c213a2407 = $(`&lt;div id=&quot;html_257b56474faff33d723af52c213a2407&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Adventure Cove Waterpark&lt;/div&gt;`)[0];\n",
              "                popup_4b244012ceb04abbaa5bcb919713a01f.setContent(html_257b56474faff33d723af52c213a2407);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_c09126e38be42987a842e70e0601207e.bindPopup(popup_4b244012ceb04abbaa5bcb919713a01f)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_7abb33d6683f85afe6790f90917232a9 = L.marker(\n",
              "                [1.2829435, 103.8441517],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_895c11c15de6b314a5aa89b508a65c93 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_7abb33d6683f85afe6790f90917232a9.setIcon(icon_895c11c15de6b314a5aa89b508a65c93);\n",
              "        \n",
              "    \n",
              "        var popup_e3f168f60dac7825191ab02c443e6f31 = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_ac58ca9dfaaa4e21733faf7efcdde968 = $(`&lt;div id=&quot;html_ac58ca9dfaaa4e21733faf7efcdde968&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Chinatown&lt;/div&gt;`)[0];\n",
              "                popup_e3f168f60dac7825191ab02c443e6f31.setContent(html_ac58ca9dfaaa4e21733faf7efcdde968);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_7abb33d6683f85afe6790f90917232a9.bindPopup(popup_e3f168f60dac7825191ab02c443e6f31)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_987e52ae841c1ca24073dca6dd897a20 = L.marker(\n",
              "                [1.2627024, 103.8185034],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_0689ab38fca20214a3d873d8a052e32e = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_987e52ae841c1ca24073dca6dd897a20.setIcon(icon_0689ab38fca20214a3d873d8a052e32e);\n",
              "        \n",
              "    \n",
              "        var popup_aa37344516209245d992dd0e3dd1cd1b = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_95822afe349e582da1fe6a6be693ad88 = $(`&lt;div id=&quot;html_95822afe349e582da1fe6a6be693ad88&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;Singapore Cable Car&lt;/div&gt;`)[0];\n",
              "                popup_aa37344516209245d992dd0e3dd1cd1b.setContent(html_95822afe349e582da1fe6a6be693ad88);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_987e52ae841c1ca24073dca6dd897a20.bindPopup(popup_aa37344516209245d992dd0e3dd1cd1b)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "    \n",
              "            var marker_93acc39cded6cb5c03260036ffd276aa = L.marker(\n",
              "                [1.28604225, 103.85926027216563],\n",
              "                {}\n",
              "            ).addTo(map_fc0956a539f9818a94428b66e7dda063);\n",
              "        \n",
              "    \n",
              "            var icon_5aed38f4408d2ee1c107072e41ff9f59 = L.AwesomeMarkers.icon(\n",
              "                {&quot;extraClasses&quot;: &quot;fa-rotate-0&quot;, &quot;icon&quot;: &quot;info-sign&quot;, &quot;iconColor&quot;: &quot;white&quot;, &quot;markerColor&quot;: &quot;red&quot;, &quot;prefix&quot;: &quot;glyphicon&quot;}\n",
              "            );\n",
              "            marker_93acc39cded6cb5c03260036ffd276aa.setIcon(icon_5aed38f4408d2ee1c107072e41ff9f59);\n",
              "        \n",
              "    \n",
              "        var popup_65fea7f8f57d4a76bf9e14c1d658b1fa = L.popup({&quot;maxWidth&quot;: &quot;100%&quot;});\n",
              "\n",
              "        \n",
              "            \n",
              "                var html_9708f6d9dd0b4d828c2a0fd3a4137ac3 = $(`&lt;div id=&quot;html_9708f6d9dd0b4d828c2a0fd3a4137ac3&quot; style=&quot;width: 100.0%; height: 100.0%;&quot;&gt;ArtScience Museum&lt;/div&gt;`)[0];\n",
              "                popup_65fea7f8f57d4a76bf9e14c1d658b1fa.setContent(html_9708f6d9dd0b4d828c2a0fd3a4137ac3);\n",
              "            \n",
              "        \n",
              "\n",
              "        marker_93acc39cded6cb5c03260036ffd276aa.bindPopup(popup_65fea7f8f57d4a76bf9e14c1d658b1fa)\n",
              "        ;\n",
              "\n",
              "        \n",
              "    \n",
              "&lt;/script&gt;\n",
              "&lt;/html&gt;\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 113
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WXVuGEFZTfFo"
      },
      "source": [
        "The visualization highlights the favorable locations of Downtown Core, River Valley, Marina South, and Bukit Merah, with each area offering proximity to key attractions. Our focus will be on exploring accommodations within these three areas to ensure a convenient and enjoyable stay in Singapore."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EcbCVSrJVD8X",
        "outputId": "16ba1caa-911b-408a-9d36-ea6f92093b60"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Rating counts for the selected neighborhoods:\n",
            "\n",
            "neighbourhood  rating\n",
            "Bukit Merah    0.00      132\n",
            "               5.00       10\n",
            "               4.80        5\n",
            "               4.67        3\n",
            "               4.72        3\n",
            "                        ... \n",
            "River Valley   4.76        1\n",
            "               4.79        1\n",
            "               4.84        1\n",
            "               4.91        1\n",
            "               4.95        1\n",
            "Name: rating, Length: 137, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "# @title Count the rating by neighbourhood for the selected neighborhoods\n",
        "\n",
        "# Create focus neighborhood\n",
        "focus_neighborhoods = ['Downtown Core', 'Marina South', 'Bukit Merah', 'River Valley']\n",
        "\n",
        "# Count the rating of selected neighborhood\n",
        "rating_counts_selected = df_filtered.loc[df_filtered['neighbourhood'].isin(focus_neighborhoods)].groupby('neighbourhood')['rating'].value_counts()\n",
        "\n",
        "print(\"Rating counts for the selected neighborhoods:\\n\")\n",
        "print(rating_counts_selected)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kzKDogRWZ9Ft"
      },
      "source": [
        "Now, let's see the rating value 4.00 to 5.00"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VSo1fA8JaIep",
        "outputId": "a869f686-3ddb-416e-d960-238157a136c3"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Rating counts between 4.00 and 5.00 for the selected neighborhoods:\n",
            "\n",
            "neighbourhood  rating\n",
            "Bukit Merah    5.00      10\n",
            "               4.80       5\n",
            "               4.67       3\n",
            "               4.72       3\n",
            "               4.00       2\n",
            "                         ..\n",
            "River Valley   4.76       1\n",
            "               4.79       1\n",
            "               4.84       1\n",
            "               4.91       1\n",
            "               4.95       1\n",
            "Name: rating, Length: 123, dtype: int64\n"
          ]
        }
      ],
      "source": [
        "# @title Filter the rating counts, only include values between 4.00 and 5.00\n",
        "rating_counts_filtered = rating_counts_selected.loc[(rating_counts_selected.index.get_level_values('rating') >= 4.00) & (rating_counts_selected.index.get_level_values('rating') <= 5.00)]\n",
        "\n",
        "# Display the filtered rating counts for the selected neighborhoods without truncation\n",
        "print(\"Rating counts between 4.00 and 5.00 for the selected neighborhoods:\\n\")\n",
        "print(rating_counts_filtered)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "O6caGw9yerpe",
        "outputId": "a1850c55-0b2c-4bb9-902b-97eb7b8abb4a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{('Bukit Merah', 5.0): 10, ('Bukit Merah', 4.8): 5, ('Bukit Merah', 4.67): 3, ('Bukit Merah', 4.72): 3, ('Bukit Merah', 4.0): 2, ('Bukit Merah', 4.25): 2, ('Bukit Merah', 4.4): 2, ('Bukit Merah', 4.43): 2, ('Bukit Merah', 4.5): 2, ('Bukit Merah', 4.55): 2, ('Bukit Merah', 4.56): 2, ('Bukit Merah', 4.62): 2, ('Bukit Merah', 4.69): 2, ('Bukit Merah', 4.13): 1, ('Bukit Merah', 4.2): 1, ('Bukit Merah', 4.27): 1, ('Bukit Merah', 4.29): 1, ('Bukit Merah', 4.33): 1, ('Bukit Merah', 4.54): 1, ('Bukit Merah', 4.6): 1, ('Bukit Merah', 4.63): 1, ('Bukit Merah', 4.73): 1, ('Bukit Merah', 4.75): 1, ('Bukit Merah', 4.78): 1, ('Bukit Merah', 4.83): 1, ('Bukit Merah', 4.85): 1, ('Bukit Merah', 4.86): 1, ('Bukit Merah', 4.9): 1, ('Bukit Merah', 4.93): 1, ('Downtown Core', 5.0): 28, ('Downtown Core', 4.5): 7, ('Downtown Core', 4.0): 5, ('Downtown Core', 4.33): 5, ('Downtown Core', 4.6): 5, ('Downtown Core', 4.75): 5, ('Downtown Core', 4.71): 3, ('Downtown Core', 4.8): 3, ('Downtown Core', 4.87): 3, ('Downtown Core', 4.17): 2, ('Downtown Core', 4.2): 2, ('Downtown Core', 4.3): 2, ('Downtown Core', 4.47): 2, ('Downtown Core', 4.54): 2, ('Downtown Core', 4.57): 2, ('Downtown Core', 4.58): 2, ('Downtown Core', 4.66): 2, ('Downtown Core', 4.68): 2, ('Downtown Core', 4.73): 2, ('Downtown Core', 4.74): 2, ('Downtown Core', 4.77): 2, ('Downtown Core', 4.79): 2, ('Downtown Core', 4.81): 2, ('Downtown Core', 4.86): 2, ('Downtown Core', 4.88): 2, ('Downtown Core', 4.9): 2, ('Downtown Core', 4.93): 2, ('Downtown Core', 4.95): 2, ('Downtown Core', 4.97): 2, ('Downtown Core', 4.14): 1, ('Downtown Core', 4.15): 1, ('Downtown Core', 4.41): 1, ('Downtown Core', 4.43): 1, ('Downtown Core', 4.44): 1, ('Downtown Core', 4.46): 1, ('Downtown Core', 4.51): 1, ('Downtown Core', 4.56): 1, ('Downtown Core', 4.59): 1, ('Downtown Core', 4.61): 1, ('Downtown Core', 4.63): 1, ('Downtown Core', 4.65): 1, ('Downtown Core', 4.67): 1, ('Downtown Core', 4.78): 1, ('Downtown Core', 4.82): 1, ('Downtown Core', 4.84): 1, ('Downtown Core', 4.85): 1, ('Downtown Core', 4.89): 1, ('Downtown Core', 4.91): 1, ('Downtown Core', 4.92): 1, ('Downtown Core', 4.94): 1, ('Downtown Core', 4.98): 1, ('Marina South', 4.67): 2, ('Marina South', 4.88): 1, ('Marina South', 4.9): 1, ('Marina South', 4.93): 1, ('Marina South', 5.0): 1, ('River Valley', 4.5): 7, ('River Valley', 4.67): 7, ('River Valley', 5.0): 5, ('River Valley', 4.33): 4, ('River Valley', 4.43): 3, ('River Valley', 4.75): 3, ('River Valley', 4.0): 2, ('River Valley', 4.31): 2, ('River Valley', 4.38): 2, ('River Valley', 4.42): 2, ('River Valley', 4.44): 2, ('River Valley', 4.45): 2, ('River Valley', 4.71): 2, ('River Valley', 4.08): 1, ('River Valley', 4.14): 1, ('River Valley', 4.2): 1, ('River Valley', 4.22): 1, ('River Valley', 4.23): 1, ('River Valley', 4.25): 1, ('River Valley', 4.27): 1, ('River Valley', 4.29): 1, ('River Valley', 4.39): 1, ('River Valley', 4.4): 1, ('River Valley', 4.46): 1, ('River Valley', 4.47): 1, ('River Valley', 4.57): 1, ('River Valley', 4.58): 1, ('River Valley', 4.59): 1, ('River Valley', 4.6): 1, ('River Valley', 4.64): 1, ('River Valley', 4.65): 1, ('River Valley', 4.69): 1, ('River Valley', 4.7): 1, ('River Valley', 4.76): 1, ('River Valley', 4.79): 1, ('River Valley', 4.84): 1, ('River Valley', 4.91): 1, ('River Valley', 4.95): 1}\n"
          ]
        }
      ],
      "source": [
        "# @title Convert to dictionary format\n",
        "rating_counts_dict = rating_counts_filtered.to_dict()\n",
        "\n",
        "# Print the dictionary in the desired format\n",
        "for key, value in rating_counts_dict.items():\n",
        "    (f\"{key}: {value}\")\n",
        "\n",
        "print(rating_counts_dict)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BKg3XW5Ovr17",
        "outputId": "fcfb919f-c7b7-4548-a9c9-4ec5f92f169c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    Rating  Bukit Merah  Downtown Core  Marina South  River Valley\n",
            "0     4.00            2              5             0             2\n",
            "1     4.08            0              0             0             1\n",
            "2     4.13            1              0             0             0\n",
            "3     4.14            0              1             0             1\n",
            "4     4.15            0              1             0             0\n",
            "..     ...          ...            ...           ...           ...\n",
            "67    4.94            0              1             0             0\n",
            "68    4.95            0              2             0             1\n",
            "69    4.97            0              2             0             0\n",
            "70    4.98            0              1             0             0\n",
            "71    5.00           10             28             1             5\n",
            "\n",
            "[72 rows x 5 columns]\n"
          ]
        }
      ],
      "source": [
        "# Create a new format DataFrame\n",
        "\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "\n",
        "df_new_format = pd.DataFrame(list(rating_counts_dict.keys()), columns=['Location', 'Rating'])\n",
        "df_new_format['Count'] = rating_counts_dict.values()\n",
        "\n",
        "# Pivot the DataFrame to create new columns for each location\n",
        "pivot_df = df_new_format.pivot_table(index='Rating', columns='Location', values='Count', fill_value=0).reset_index()\n",
        "\n",
        "# Set the name of the Location column to empty\n",
        "pivot_df.columns.name = None\n",
        "\n",
        "# Set pandas option to display float values with two decimal places\n",
        "pd.set_option('display.float_format', '{:.2f}'.format)\n",
        "\n",
        "print(pivot_df)\n",
        "\n",
        "warnings.filterwarnings(\"default\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "fjMgZ9klyKhC"
      },
      "outputs": [],
      "source": [
        "# Group the data by 'Location', find the mode (most frequent) rating for each group, and count the occurrences of each mode rating\n",
        "most_frequent_rating = df_new_format.groupby('Location')['Rating'].agg(lambda x: x.mode().iloc[0])\n",
        "count_most_frequent_rating = df_new_format.groupby('Location')['Rating'].agg(lambda x: x.mode().count())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kiRMXs_bx7YB",
        "outputId": "b3e2ed3f-6641-47ad-89cf-9888e50ef241"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "               Most_Frequent_Rating  Count_Rating\n",
            "Location                                         \n",
            "Bukit Merah                    4.00            29\n",
            "Downtown Core                  4.00            51\n",
            "Marina South                   4.67             5\n",
            "River Valley                   4.00            38\n"
          ]
        }
      ],
      "source": [
        "# Create a new DataFrame to store the results\n",
        "frequent_df = pd.DataFrame({'Most_Frequent_Rating': most_frequent_rating, 'Count_Rating': count_most_frequent_rating})\n",
        "\n",
        "print(frequent_df)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "t54TQLifxuQP",
        "outputId": "7cafb175-c953-4e0d-a2ac-1fab5acf8fc4"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "               Highest_Rating  Count_Rating\n",
            "Location                                   \n",
            "Bukit Merah              5.00            10\n",
            "Downtown Core            5.00            28\n",
            "Marina South             5.00             1\n",
            "River Valley             5.00             5\n"
          ]
        }
      ],
      "source": [
        "# Group the data by 'Location', find the highest rating for each group, and count the occurrences of the highest rating\n",
        "highest_rating = df_new_format.groupby('Location')['Rating'].max()\n",
        "count_highest_rating = df_new_format[df_new_format['Rating'].isin(highest_rating)].groupby('Location')['Count'].sum()\n",
        "\n",
        "# Create a new DataFrame to store the results\n",
        "df_highest_rating_count = pd.DataFrame({'Highest_Rating': highest_rating, 'Count_Rating': count_highest_rating})\n",
        "\n",
        "print(df_highest_rating_count)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "l3rZlgta0hCB"
      },
      "source": [
        "The rating analysis indicates that Downtown Core has the highest rating (5.00) with 28 reviews, suggesting it as a popular and preferred location for accommodation. Therefore, we choose Downtown Core for its positive reviews and central location."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "saSmFuYM0bnv"
      },
      "source": [
        "Now let's see the price."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 790
        },
        "id": "TVyhj1Gu1Rcp",
        "outputId": "b72801db-4ac7-4d79-b9a7-5cd0988fb94c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id                                               name  host_id  \\\n",
              "3   275343  Rental unit in Singapore · ★4.40 · 1 bedroom ·...  1439258   \n",
              "4   275344  Rental unit in Singapore · ★4.54 · 1 bedroom ·...  1439258   \n",
              "7   324945  Rental unit in Singapore · ★3.62 · 1 bedroom ·...  1439258   \n",
              "8   330095  Rental unit in Singapore · ★4.50 · 1 bedroom ·...  1439258   \n",
              "11  395191  Rental unit in Singapore · ★4.31 · 1 bedroom ·...  1975201   \n",
              "\n",
              "   host_name neighbourhood     room_type  price last_review  \\\n",
              "3        Kay   Bukit Merah  Private room     55  2022-08-13   \n",
              "4        Kay   Bukit Merah  Private room     69  2023-03-23   \n",
              "7        Kay   Bukit Merah  Private room     55  2022-07-25   \n",
              "8        Kay   Bukit Merah  Private room     49  2023-06-21   \n",
              "11       Adi  River Valley  Private room    100  2017-08-07   \n",
              "\n",
              "    reviews_per_month  availability_365  rating  \n",
              "3                0.18               301    4.40  \n",
              "4                0.11                57    4.54  \n",
              "7                0.13               235    3.62  \n",
              "8                0.04               299    4.50  \n",
              "11               0.22                83    4.31  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-272b729c-5e10-42ac-bc7c-1563b9287afb\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>host_id</th>\n",
              "      <th>host_name</th>\n",
              "      <th>neighbourhood</th>\n",
              "      <th>room_type</th>\n",
              "      <th>price</th>\n",
              "      <th>last_review</th>\n",
              "      <th>reviews_per_month</th>\n",
              "      <th>availability_365</th>\n",
              "      <th>rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>275343</td>\n",
              "      <td>Rental unit in Singapore · ★4.40 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>Private room</td>\n",
              "      <td>55</td>\n",
              "      <td>2022-08-13</td>\n",
              "      <td>0.18</td>\n",
              "      <td>301</td>\n",
              "      <td>4.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>275344</td>\n",
              "      <td>Rental unit in Singapore · ★4.54 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>Private room</td>\n",
              "      <td>69</td>\n",
              "      <td>2023-03-23</td>\n",
              "      <td>0.11</td>\n",
              "      <td>57</td>\n",
              "      <td>4.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>324945</td>\n",
              "      <td>Rental unit in Singapore · ★3.62 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>Private room</td>\n",
              "      <td>55</td>\n",
              "      <td>2022-07-25</td>\n",
              "      <td>0.13</td>\n",
              "      <td>235</td>\n",
              "      <td>3.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>330095</td>\n",
              "      <td>Rental unit in Singapore · ★4.50 · 1 bedroom ·...</td>\n",
              "      <td>1439258</td>\n",
              "      <td>Kay</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>Private room</td>\n",
              "      <td>49</td>\n",
              "      <td>2023-06-21</td>\n",
              "      <td>0.04</td>\n",
              "      <td>299</td>\n",
              "      <td>4.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>395191</td>\n",
              "      <td>Rental unit in Singapore · ★4.31 · 1 bedroom ·...</td>\n",
              "      <td>1975201</td>\n",
              "      <td>Adi</td>\n",
              "      <td>River Valley</td>\n",
              "      <td>Private room</td>\n",
              "      <td>100</td>\n",
              "      <td>2017-08-07</td>\n",
              "      <td>0.22</td>\n",
              "      <td>83</td>\n",
              "      <td>4.31</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-272b729c-5e10-42ac-bc7c-1563b9287afb')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-8a6e5025-f2c0-4874-b2c1-1c4c43504be4\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8a6e5025-f2c0-4874-b2c1-1c4c43504be4')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-8a6e5025-f2c0-4874-b2c1-1c4c43504be4 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-272b729c-5e10-42ac-bc7c-1563b9287afb button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-272b729c-5e10-42ac-bc7c-1563b9287afb');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 121
        }
      ],
      "source": [
        "# @title Create new focus neighborhood with price\n",
        "\n",
        "df_new_filtered = df_filtered.loc[df_filtered['neighbourhood'].isin(focus_neighborhoods)].copy()\n",
        "\n",
        "# Display the filtered DataFrame\n",
        "df_new_filtered.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "r8WkGo_22UVz",
        "outputId": "cf35030f-2ddb-487d-f9d8-e26cbf94196c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id                                               name neighbourhood  \\\n",
              "3   275343  Rental unit in Singapore · ★4.40 · 1 bedroom ·...   Bukit Merah   \n",
              "4   275344  Rental unit in Singapore · ★4.54 · 1 bedroom ·...   Bukit Merah   \n",
              "7   324945  Rental unit in Singapore · ★3.62 · 1 bedroom ·...   Bukit Merah   \n",
              "8   330095  Rental unit in Singapore · ★4.50 · 1 bedroom ·...   Bukit Merah   \n",
              "11  395191  Rental unit in Singapore · ★4.31 · 1 bedroom ·...  River Valley   \n",
              "\n",
              "    price  rating  \n",
              "3      55    4.40  \n",
              "4      69    4.54  \n",
              "7      55    3.62  \n",
              "8      49    4.50  \n",
              "11    100    4.31  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-b252a290-8e94-40d2-8036-aa01072cc7b5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>neighbourhood</th>\n",
              "      <th>price</th>\n",
              "      <th>rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>275343</td>\n",
              "      <td>Rental unit in Singapore · ★4.40 · 1 bedroom ·...</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>55</td>\n",
              "      <td>4.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>275344</td>\n",
              "      <td>Rental unit in Singapore · ★4.54 · 1 bedroom ·...</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>69</td>\n",
              "      <td>4.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>324945</td>\n",
              "      <td>Rental unit in Singapore · ★3.62 · 1 bedroom ·...</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>55</td>\n",
              "      <td>3.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>330095</td>\n",
              "      <td>Rental unit in Singapore · ★4.50 · 1 bedroom ·...</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>49</td>\n",
              "      <td>4.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>395191</td>\n",
              "      <td>Rental unit in Singapore · ★4.31 · 1 bedroom ·...</td>\n",
              "      <td>River Valley</td>\n",
              "      <td>100</td>\n",
              "      <td>4.31</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b252a290-8e94-40d2-8036-aa01072cc7b5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-4f1302f0-d76b-4095-8144-27d46895e6ec\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4f1302f0-d76b-4095-8144-27d46895e6ec')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-4f1302f0-d76b-4095-8144-27d46895e6ec button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b252a290-8e94-40d2-8036-aa01072cc7b5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b252a290-8e94-40d2-8036-aa01072cc7b5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 122
        }
      ],
      "source": [
        "# @title Select column to keep\n",
        "# List of columns to keep\n",
        "new_columns_to_keep = ['id', 'name', 'neighbourhood',\n",
        "                   'price', 'rating']\n",
        "\n",
        "# Show only the specified columns\n",
        "new_df_keep = df_new_filtered[new_columns_to_keep]\n",
        "\n",
        "new_df_keep.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fepnfa6VKgt2",
        "outputId": "56f0df83-a31d-46ef-9c6d-47f3de81bbf8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of rows: 773\n"
          ]
        }
      ],
      "source": [
        "# Count the rows\n",
        "count_new_df_keep_rows = new_df_keep.shape[0]\n",
        "\n",
        "print(\"Number of rows:\", count_new_df_keep_rows)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HiAuoahUONKb",
        "outputId": "79e3b842-7e4f-4b62-f974-52404d086fb8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "               Total Count  Maximum Price  Minimum Price\n",
            "Bukit Merah            191           1000             26\n",
            "Downtown Core          341          13316             39\n",
            "Marina South             9           1188            541\n",
            "River Valley           232           1205             40\n"
          ]
        }
      ],
      "source": [
        "# @title Count of entries and prices for each neighborhood\n",
        "\n",
        "# Count of entries for each neighborhood\n",
        "neighborhood_counts_price = new_df_keep['neighbourhood'].value_counts()\n",
        "\n",
        "# Maximum price for each neighborhood\n",
        "neighborhood_max_prices = new_df_keep.groupby('neighbourhood')['price'].max()\n",
        "\n",
        "# Minimum price for each neighborhood\n",
        "neighborhood_min_prices = new_df_keep.groupby('neighbourhood')['price'].min()\n",
        "\n",
        "# Combine the results into a new DataFrame\n",
        "price_df = pd.DataFrame({\n",
        "    'Total Count': neighborhood_counts_price,\n",
        "    'Maximum Price': neighborhood_max_prices,\n",
        "    'Minimum Price': neighborhood_min_prices\n",
        "})\n",
        "\n",
        "print(price_df)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# @title Count the maximum price neighborhood\n",
        "neighborhood_max_prices = new_df_keep.groupby('neighbourhood')['price'].max()\n",
        "\n",
        "# Count the number of occurrences of the maximum price for each neighborhood\n",
        "neighborhood_max_prices_count = new_df_keep.groupby('neighbourhood')['price'].apply(lambda x: (x == x.max()).sum())\n",
        "\n",
        "# Combine the results into a new DataFrame\n",
        "neighborhood_max_prices_df = pd.DataFrame({\n",
        "    'Maximum Price': neighborhood_max_prices,\n",
        "    'Count': neighborhood_max_prices_count\n",
        "}).reset_index()\n",
        "\n",
        "# Rename the 'neighbourhood' column to 'Neighbourhood'\n",
        "neighborhood_max_prices_df.rename(columns={'neighbourhood': 'Neighbourhood'}, inplace=True)\n",
        "\n",
        "print(neighborhood_max_prices_df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9qiFVw_ciJBB",
        "outputId": "b9a691f8-513e-4e97-f588-74f4753f97b8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   Neighbourhood  Maximum Price  Count\n",
            "0    Bukit Merah           1000      3\n",
            "1  Downtown Core          13316      5\n",
            "2   Marina South           1188      1\n",
            "3   River Valley           1205      1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# @title Count the minimum price neighborhood\n",
        "neighborhood_min_prices = new_df_keep.groupby('neighbourhood')['price'].min()\n",
        "\n",
        "# Count the number of occurrences of the minimum price for each neighborhood\n",
        "neighborhood_min_prices_count = new_df_keep.groupby('neighbourhood')['price'].apply(lambda x: (x == x.min()).sum())\n",
        "\n",
        "# Combine the results\n",
        "neighborhood_min_prices_df = pd.DataFrame({\n",
        "    'minimum price': neighborhood_min_prices,\n",
        "    'count': neighborhood_min_prices_count\n",
        "}).reset_index()\n",
        "\n",
        "neighborhood_max_prices_df.rename(columns={'neighbourhood': 'Neighbourhood'}, inplace=True)\n",
        "\n",
        "print(neighborhood_min_prices_df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BiArlYF4iy0K",
        "outputId": "005c5a80-ba9b-4457-aa6b-812a3debbef5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   neighbourhood  minimum price  count\n",
            "0    Bukit Merah             26      1\n",
            "1  Downtown Core             39      1\n",
            "2   Marina South            541      1\n",
            "3   River Valley             40      1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZGxmeQn4MfJ_",
        "outputId": "44205d5d-3d9c-4db2-a5ee-34c6a8ad3fac"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     Neighbourhood  Price  Rating  Count\n",
            "8      Bukit Merah     45    0.00     11\n",
            "16     Bukit Merah     59    0.00      8\n",
            "46     Bukit Merah    149    0.00      5\n",
            "266  Downtown Core    250    0.00      6\n",
            "198  Downtown Core    151    0.00      5\n",
            "225  Downtown Core    180    0.00      5\n",
            "398   Marina South    541    5.00      1\n",
            "399   Marina South    557    0.00      1\n",
            "400   Marina South    559    4.67      1\n",
            "496   River Valley    215    0.00     13\n",
            "507   River Valley    245    0.00     10\n",
            "455   River Valley    185    0.00      5\n"
          ]
        }
      ],
      "source": [
        "# @title Count top three frequent prices each neighborhood with rating\n",
        "\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "\n",
        "# Group by 'neighbourhood' and 'price', then count the occurrences of each price in each neighborhood\n",
        "frequent_prices = new_df_keep.groupby(['neighbourhood', 'price', 'rating']).size().reset_index(name='count')\n",
        "\n",
        "# Sort the data by neighborhood and count in descending order\n",
        "sorted_frequent_prices = frequent_prices.sort_values(by=['neighbourhood', 'count'], ascending=[True, False])\n",
        "\n",
        "# Group by 'neighbourhood' and select the top 3 frequent prices along with their counts\n",
        "top_3_frequent_prices = sorted_frequent_prices.groupby('neighbourhood').head(3)\n",
        "\n",
        "top_3_frequent_prices.rename(columns={'neighbourhood': 'Neighbourhood',\n",
        "                                      'price': 'Price',\n",
        "                                      'rating': 'Rating',\n",
        "                                      'count': 'Count'}, inplace=True)\n",
        "\n",
        "print(top_3_frequent_prices)\n",
        "\n",
        "warnings.filterwarnings(\"default\")"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The data shows frequent low prices across neighborhoods, but the ratings are mostly poor. An exception is Marina South, where two listings have good ratings. This suggests a competitive market with quality concerns in other neighborhoods, but potential opportunities in Marina South. Further analysis is needed for more comprehensive insights.\n",
        "\n",
        "Take a look on the dataset below derived from previous analysis."
      ],
      "metadata": {
        "id": "-arqizTWrSGx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# @title Filter the DataFrame for rating > 5.00\n",
        "filtered_rating_df = new_df_keep[new_df_keep['rating'] == 5.00]\n",
        "\n",
        "filtered_rating_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "WlO0Ndna0GFC",
        "outputId": "055cf896-7de7-452d-fc4d-3695ddc861f1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            id                                               name  \\\n",
              "590   18585234  Condo in Singapore · ★5.0 · 1 bedroom · 1 bed ...   \n",
              "679   21200260  Rental unit in Tanjong Pagar · ★5.0 · 1 bedroo...   \n",
              "798   23506068  Rental unit in Singapore · ★5.0 · 1 bedroom · ...   \n",
              "981   29049813  Condo in Tanjong Pagar · ★5.0 · 1 bedroom · 1 ...   \n",
              "1025  29972407  Condo in Tanjong Pagar · ★5.0 · 1 bedroom · 1 ...   \n",
              "\n",
              "      neighbourhood  price  rating  \n",
              "590     Bukit Merah    999    5.00  \n",
              "679   Downtown Core    141    5.00  \n",
              "798   Downtown Core    144    5.00  \n",
              "981   Downtown Core    168    5.00  \n",
              "1025  Downtown Core    178    5.00  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-b3baf2c0-3f81-45cc-9d8c-38dd4f4dd61c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>neighbourhood</th>\n",
              "      <th>price</th>\n",
              "      <th>rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>590</th>\n",
              "      <td>18585234</td>\n",
              "      <td>Condo in Singapore · ★5.0 · 1 bedroom · 1 bed ...</td>\n",
              "      <td>Bukit Merah</td>\n",
              "      <td>999</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>679</th>\n",
              "      <td>21200260</td>\n",
              "      <td>Rental unit in Tanjong Pagar · ★5.0 · 1 bedroo...</td>\n",
              "      <td>Downtown Core</td>\n",
              "      <td>141</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>798</th>\n",
              "      <td>23506068</td>\n",
              "      <td>Rental unit in Singapore · ★5.0 · 1 bedroom · ...</td>\n",
              "      <td>Downtown Core</td>\n",
              "      <td>144</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>981</th>\n",
              "      <td>29049813</td>\n",
              "      <td>Condo in Tanjong Pagar · ★5.0 · 1 bedroom · 1 ...</td>\n",
              "      <td>Downtown Core</td>\n",
              "      <td>168</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1025</th>\n",
              "      <td>29972407</td>\n",
              "      <td>Condo in Tanjong Pagar · ★5.0 · 1 bedroom · 1 ...</td>\n",
              "      <td>Downtown Core</td>\n",
              "      <td>178</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3baf2c0-3f81-45cc-9d8c-38dd4f4dd61c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-f1a1e130-ce0e-4481-b468-4bec2d58306c\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f1a1e130-ce0e-4481-b468-4bec2d58306c')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-f1a1e130-ce0e-4481-b468-4bec2d58306c button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b3baf2c0-3f81-45cc-9d8c-38dd4f4dd61c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b3baf2c0-3f81-45cc-9d8c-38dd4f4dd61c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 132
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "count_filtered_rating_df = filtered_rating_df.shape[0]\n",
        "\n",
        "print(\"Number of rows:\", count_filtered_rating_df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jTSI2yfR0mWo",
        "outputId": "afcb79e3-41bd-4e0e-d8c3-6997a8e5626e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of rows: 44\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# The Decision and Result\n",
        "Based on previous rating analysis result below:\n",
        "```\n",
        "               Highest_Rating  Count_Rating\n",
        "Location                                   \n",
        "Bukit Merah              5.00            10\n",
        "Downtown Core            5.00            28\n",
        "Marina South             5.00             1\n",
        "River Valley             5.00             5\n",
        "```\n",
        "We have made the decision to opt for an Airbnb accommodation in the Downtown Core area of Singapore. Let us proceed by filtering the search exclusively to properties located in the Downtown Core, to evaluate the available options.\n"
      ],
      "metadata": {
        "id": "4tJi0yit3KCx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# @title Downtown Core DataFrame\n",
        "# Show only rows where the 'neighbourhood' contains 'Downtown Core' and 'rating' is equal to 5.00\n",
        "filtered_df_downtown_core = new_df_keep[new_df_keep['neighbourhood'].str.contains('Downtown Core') & (new_df_keep['rating'] == 5.00)]\n",
        "\n",
        "filtered_df_downtown_core.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "6_O7y18D7Ajb",
        "outputId": "1275783f-a3c6-4ecf-d2f0-fe549609e829"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            id                                               name  \\\n",
              "679   21200260  Rental unit in Tanjong Pagar · ★5.0 · 1 bedroo...   \n",
              "798   23506068  Rental unit in Singapore · ★5.0 · 1 bedroom · ...   \n",
              "981   29049813  Condo in Tanjong Pagar · ★5.0 · 1 bedroom · 1 ...   \n",
              "1025  29972407  Condo in Tanjong Pagar · ★5.0 · 1 bedroom · 1 ...   \n",
              "1045  30354713  Rental unit in Tanjong Pagar · ★5.0 · Studio ·...   \n",
              "\n",
              "      neighbourhood  price  rating  \n",
              "679   Downtown Core    141    5.00  \n",
              "798   Downtown Core    144    5.00  \n",
              "981   Downtown Core    168    5.00  \n",
              "1025  Downtown Core    178    5.00  \n",
              "1045  Downtown Core    172    5.00  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-420d26b5-2c48-4139-bbee-7daf543aad4c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>neighbourhood</th>\n",
              "      <th>price</th>\n",
              "      <th>rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>679</th>\n",
              "      <td>21200260</td>\n",
              "      <td>Rental unit in Tanjong Pagar · ★5.0 · 1 bedroo...</td>\n",
              "      <td>Downtown Core</td>\n",
              "      <td>141</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>798</th>\n",
              "      <td>23506068</td>\n",
              "      <td>Rental unit in Singapore · ★5.0 · 1 bedroom · ...</td>\n",
              "      <td>Downtown Core</td>\n",
              "      <td>144</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>981</th>\n",
              "      <td>29049813</td>\n",
              "      <td>Condo in Tanjong Pagar · ★5.0 · 1 bedroom · 1 ...</td>\n",
              "      <td>Downtown Core</td>\n",
              "      <td>168</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1025</th>\n",
              "      <td>29972407</td>\n",
              "      <td>Condo in Tanjong Pagar · ★5.0 · 1 bedroom · 1 ...</td>\n",
              "      <td>Downtown Core</td>\n",
              "      <td>178</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1045</th>\n",
              "      <td>30354713</td>\n",
              "      <td>Rental unit in Tanjong Pagar · ★5.0 · Studio ·...</td>\n",
              "      <td>Downtown Core</td>\n",
              "      <td>172</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-420d26b5-2c48-4139-bbee-7daf543aad4c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-fe914f1c-8c75-456d-864f-d893da7ca6a7\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fe914f1c-8c75-456d-864f-d893da7ca6a7')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-fe914f1c-8c75-456d-864f-d893da7ca6a7 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-420d26b5-2c48-4139-bbee-7daf543aad4c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-420d26b5-2c48-4139-bbee-7daf543aad4c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 134
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "count_downtown_core_df = filtered_df_downtown_core.shape[0]\n",
        "\n",
        "print(\"Number of rows:\", count_downtown_core_df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OQKd3MOY6DPG",
        "outputId": "1d3c7293-a35a-46f2-e85b-5619ee5edc40"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of rows: 28\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# @title DataFrame contains 5.00 rating and price < 200\n",
        "final_df_downtown_core = new_df_keep[new_df_keep['neighbourhood'].str.contains('Downtown Core') & (new_df_keep['rating'] == 5.00) & (new_df_keep['price'] < 200)]\n",
        "\n",
        "final_df_downtown_core.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "7RW_ZhnD9qvC",
        "outputId": "d4708b8a-395d-4bc1-8319-9a307119522c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            id                                               name  \\\n",
              "679   21200260  Rental unit in Tanjong Pagar · ★5.0 · 1 bedroo...   \n",
              "798   23506068  Rental unit in Singapore · ★5.0 · 1 bedroom · ...   \n",
              "981   29049813  Condo in Tanjong Pagar · ★5.0 · 1 bedroom · 1 ...   \n",
              "1025  29972407  Condo in Tanjong Pagar · ★5.0 · 1 bedroom · 1 ...   \n",
              "1045  30354713  Rental unit in Tanjong Pagar · ★5.0 · Studio ·...   \n",
              "\n",
              "      neighbourhood  price  rating  \n",
              "679   Downtown Core    141    5.00  \n",
              "798   Downtown Core    144    5.00  \n",
              "981   Downtown Core    168    5.00  \n",
              "1025  Downtown Core    178    5.00  \n",
              "1045  Downtown Core    172    5.00  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-1a964817-ac9d-4f23-ac94-0b3323b273ac\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>name</th>\n",
              "      <th>neighbourhood</th>\n",
              "      <th>price</th>\n",
              "      <th>rating</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>679</th>\n",
              "      <td>21200260</td>\n",
              "      <td>Rental unit in Tanjong Pagar · ★5.0 · 1 bedroo...</td>\n",
              "      <td>Downtown Core</td>\n",
              "      <td>141</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>798</th>\n",
              "      <td>23506068</td>\n",
              "      <td>Rental unit in Singapore · ★5.0 · 1 bedroom · ...</td>\n",
              "      <td>Downtown Core</td>\n",
              "      <td>144</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>981</th>\n",
              "      <td>29049813</td>\n",
              "      <td>Condo in Tanjong Pagar · ★5.0 · 1 bedroom · 1 ...</td>\n",
              "      <td>Downtown Core</td>\n",
              "      <td>168</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1025</th>\n",
              "      <td>29972407</td>\n",
              "      <td>Condo in Tanjong Pagar · ★5.0 · 1 bedroom · 1 ...</td>\n",
              "      <td>Downtown Core</td>\n",
              "      <td>178</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1045</th>\n",
              "      <td>30354713</td>\n",
              "      <td>Rental unit in Tanjong Pagar · ★5.0 · Studio ·...</td>\n",
              "      <td>Downtown Core</td>\n",
              "      <td>172</td>\n",
              "      <td>5.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a964817-ac9d-4f23-ac94-0b3323b273ac')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-a153a032-cc16-4007-b938-08ea4395f647\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a153a032-cc16-4007-b938-08ea4395f647')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-a153a032-cc16-4007-b938-08ea4395f647 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-1a964817-ac9d-4f23-ac94-0b3323b273ac button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-1a964817-ac9d-4f23-ac94-0b3323b273ac');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 136
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Number of DDowntown Core Airbnb:\", len(final_df_downtown_core))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PWm2ab03vN8O",
        "outputId": "be651c52-8822-40ee-d49a-3daedf0c4a92"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of DDowntown Core Airbnb: 11\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The data have successfully obtained. Now, we're going to discuss to identify the ideal location and optimal price from this list, considering the budget at our disposal.\n",
        "\n",
        "Here's the full 5 star Airbnb list in Downtown Core Singapore under 200 SGD:\n",
        "```\n",
        "| No. | id                | name                             | neighbourhood   | price | rating |\n",
        "|-----|-------------------|----------------------------------|-----------------|-------|--------|\n",
        "| 1   | 21200260          | Rental unit in Tanjong Pagar     | Downtown Core   | 141   | 5.00   |\n",
        "| 2   | 23506068          | Rental unit in Singapore         | Downtown Core   | 144   | 5.00   |\n",
        "| 3   | 29049813          | Condo in Tanjong Pagar           | Downtown Core   | 168   | 5.00   |\n",
        "| 4   | 29972407          | Condo in Tanjong Pagar           | Downtown Core   | 178   | 5.00   |\n",
        "| 5   | 30354713          | Rental unit in Tanjong Pagar Studio | Downtown Core | 172   | 5.00   |\n",
        "| 6   | 32194580          | Condo in Tanjong Pagar           | Downtown Core   | 179   | 5.00   |\n",
        "| 7   | 33347361          | Condo in Tanjong Pagar           | Downtown Core   | 153   | 5.00   |\n",
        "| 8   | 36129690          | Condo in Singapore               | Downtown Core   | 135   | 5.00   |\n",
        "| 9   | 39657837          | Condo in Singapore               | Downtown Core   | 180   | 5.00   |\n",
        "| 10  | 46145057          | Boutique hotel in Bugis          | Downtown Core   | 109   | 5.00   |\n",
        "| 11  | 895957651903938607| Condo in Singapore               | Downtown Core   | 89    | 5.00   |\n",
        "```\n",
        "\n"
      ],
      "metadata": {
        "id": "fggs9wudAWQG"
      }
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyO4LvVEmRK1Gg2Uzkxjxp+s",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}